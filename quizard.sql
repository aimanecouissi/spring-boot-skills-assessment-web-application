-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: Jul 02, 2023 at 07:20 PM
-- Server version: 8.0.31
-- PHP Version: 8.0.26

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `quizard`
--

-- --------------------------------------------------------

--
-- Table structure for table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE IF NOT EXISTS `answers` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `insertion_order` int DEFAULT NULL,
  `is_correct` bit(1) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `question_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK3erw1a3t0r78st8ty27x6v3g1` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1281 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `answers`
--

INSERT INTO `answers` (`id`, `insertion_order`, `is_correct`, `name`, `question_id`) VALUES
(1, 1, b'0', 'Java', 1),
(2, 2, b'0', 'HTML', 1),
(3, 3, b'0', 'Python', 1),
(4, 4, b'1', 'CPU', 1),
(5, 1, b'0', 'To make the code more readable for humans', 2),
(6, 2, b'0', 'To communicate with the computer hardware', 2),
(7, 3, b'1', 'To define the structure and rules of the language', 2),
(8, 4, b'0', 'To optimize program performance', 2),
(9, 1, b'0', 'C++', 3),
(10, 2, b'1', 'Ruby', 3),
(11, 3, b'0', 'Assembly', 3),
(12, 4, b'0', 'COBOL', 3),
(13, 1, b'1', 'Semicolon', 4),
(14, 2, b'0', 'Colon', 4),
(15, 3, b'0', 'Comma', 4),
(16, 4, b'0', 'Full Stop', 4),
(17, 1, b'0', 'A fixed value that cannot be changed', 5),
(18, 2, b'1', 'A storage location with a name and a value', 5),
(19, 3, b'0', 'A reserved keyword in programming languages', 5),
(20, 4, b'0', 'A mathematical operation in programming', 5),
(21, 1, b'0', 'Assembly', 6),
(22, 2, b'0', 'Binary', 6),
(23, 3, b'0', 'Machine code', 6),
(24, 4, b'1', 'Python', 6),
(25, 1, b'0', 'An error that occurs when the program runs out of memory', 7),
(26, 2, b'0', 'An error caused by incorrect program logic', 7),
(27, 3, b'1', 'An error that occurs during the compilation or interpretation of code', 7),
(28, 4, b'0', 'An error that occurs when the program fails to produce the expected output', 7),
(29, 1, b'1', 'Loop', 8),
(30, 2, b'0', 'Function', 8),
(31, 3, b'0', 'If statement', 8),
(32, 4, b'0', 'Variable', 8),
(33, 1, b'0', 'Java', 9),
(34, 2, b'1', 'PHP', 9),
(35, 3, b'0', 'C#', 9),
(36, 4, b'0', 'Swift', 9),
(37, 1, b'1', 'The process of removing errors from a program', 10),
(38, 2, b'0', 'The process of compiling a program into machine code', 10),
(39, 3, b'0', 'The process of optimizing program performance', 10),
(40, 4, b'0', 'The process of documenting code for future reference', 10),
(41, 1, b'0', 'Inheritance', 11),
(42, 2, b'0', 'Encapsulation', 11),
(43, 3, b'0', 'Polymorphism', 11),
(44, 4, b'1', 'Procedural programming', 11),
(45, 1, b'1', 'Instantiation', 12),
(46, 2, b'0', 'Inheritance', 12),
(47, 3, b'0', 'Abstraction', 12),
(48, 4, b'0', 'Polymorphism', 12),
(49, 1, b'1', 'The process of hiding internal implementation details and exposing only necessary methods and properties.', 13),
(50, 2, b'0', 'The ability of an object to take on many forms or types.', 13),
(51, 3, b'0', 'The ability to create new classes based on existing classes.', 13),
(52, 4, b'0', 'The process of defining a new class based on an existing class.', 13),
(53, 1, b'0', 'A class inheriting properties and methods from multiple parent classes.', 14),
(54, 2, b'0', 'A class implementing an interface.', 14),
(55, 3, b'0', 'A class containing private variables and public methods.', 14),
(56, 4, b'1', 'A class inheriting properties and methods from a parent class.', 14),
(57, 1, b'1', 'It allows objects of different types to be treated as the same type.', 15),
(58, 2, b'0', 'It simplifies the process of creating new objects.', 15),
(59, 3, b'0', 'It provides a way to hide implementation details.', 15),
(60, 4, b'0', 'It improves the performance of the program.', 15),
(61, 1, b'0', 'Interfaces can be instantiated directly.', 16),
(62, 2, b'1', 'A class can implement multiple interfaces.', 16),
(63, 3, b'0', 'Interfaces can contain implementation details.', 16),
(64, 4, b'0', 'Interfaces can only have private methods.', 16),
(65, 1, b'1', 'It refers to the superclass of the current class.', 17),
(66, 2, b'0', 'It refers to the subclass of the current class.', 17),
(67, 3, b'0', 'It creates a new instance of a class.', 17),
(68, 4, b'0', 'It is used to define a static method.', 17),
(69, 1, b'1', 'Creating a new method with the same name but different parameters within a class.', 18),
(70, 2, b'0', 'Creating a new class based on an existing class.', 18),
(71, 3, b'0', 'Hiding implementation details and exposing only necessary methods and properties.', 18),
(72, 4, b'0', 'Creating a new instance of a class.', 18),
(73, 1, b'0', 'A class inheriting properties and methods from a parent class.', 19),
(74, 2, b'0', 'A class implementing multiple interfaces.', 19),
(75, 3, b'1', 'A class containing an instance of another class.', 19),
(76, 4, b'0', 'A class containing private variables and public methods.', 19),
(77, 1, b'0', 'It refers to the superclass of the current class.', 20),
(78, 2, b'0', 'It refers to the subclass of the current class.', 20),
(79, 3, b'1', 'It refers to the current instance of a class.', 20),
(80, 4, b'0', 'It is used to define a static method.', 20),
(81, 1, b'0', 'Mutability of data', 21),
(82, 2, b'0', 'Emphasis on global variables', 21),
(83, 3, b'0', 'Side effects in functions', 21),
(84, 4, b'1', 'Immutability of data', 21),
(85, 1, b'1', 'A function that takes another function as an argument', 22),
(86, 2, b'0', 'A function that modifies a global variable', 22),
(87, 3, b'0', 'A function that contains mutable data', 22),
(88, 4, b'0', 'A function that returns a primitive value', 22),
(89, 1, b'0', 'The ability to modify variables in a function', 23),
(90, 2, b'1', 'The predictability of the output based on the input of a function', 23),
(91, 3, b'0', 'The presence of side effects in a function', 23),
(92, 4, b'0', 'The use of mutable data structures', 23),
(93, 1, b'0', 'A function that modifies a global variable', 24),
(94, 2, b'0', 'A function that reads user input', 24),
(95, 3, b'0', 'A function that relies on external API calls', 24),
(96, 4, b'1', 'A function that only operates on its input and returns a value', 24),
(97, 1, b'1', 'Transforming a function with multiple arguments into a chain of functions, each taking a single argument', 25),
(98, 2, b'0', 'Transforming a function into a recursive function', 25),
(99, 3, b'0', 'Transforming a function into an anonymous function', 25),
(100, 4, b'0', 'Transforming a function into a higher-order function', 25),
(101, 1, b'0', 'The ability to modify data in place', 26),
(102, 2, b'0', 'The ability to create mutable variables', 26),
(103, 3, b'1', 'The inability to modify data once it is created', 26),
(104, 4, b'0', 'The ability to modify data within a function', 26),
(105, 1, b'0', 'A function that has no return value', 27),
(106, 2, b'0', 'A function that operates on mutable data structures', 27),
(107, 3, b'0', 'A function that contains side effects', 27),
(108, 4, b'1', 'A function that produces the same output for the same input, without side effects', 27),
(109, 1, b'0', 'To modify global variables', 28),
(110, 2, b'0', 'To create side effects', 28),
(111, 3, b'1', 'To define a base case and solve a problem by reducing it to smaller subproblems', 28),
(112, 4, b'0', 'To introduce mutable data structures', 28),
(113, 1, b'0', 'Pure functions always have a return value, while impure functions may not.', 29),
(114, 2, b'0', 'Pure functions are defined using recursion, while impure functions are not.', 29),
(115, 3, b'1', 'Pure functions are predictable and side-effect-free, while impure functions can be unpredictable and have side effects.', 29),
(116, 4, b'0', 'Pure functions operate only on immutable data, while impure functions operate on mutable data.', 29),
(117, 1, b'0', 'Higher-order functions allow for mutable data structures.', 30),
(118, 2, b'0', 'Higher-order functions eliminate the need for recursion.', 30),
(119, 3, b'0', 'Higher-order functions simplify the creation of anonymous functions.', 30),
(120, 4, b'1', 'Higher-order functions promote code reusability and abstraction.', 30),
(121, 1, b'0', 'Python', 31),
(122, 2, b'0', 'Java', 31),
(123, 3, b'0', 'C++', 31),
(124, 4, b'1', 'Ruby', 31),
(125, 1, b'0', 'To improve code readability', 32),
(126, 2, b'0', 'To enhance program performance', 32),
(127, 3, b'1', 'To generate code dynamically', 32),
(128, 4, b'0', 'To optimize memory usage', 32),
(129, 1, b'1', 'Actor model', 33),
(130, 2, b'0', 'Singleton pattern', 33),
(131, 3, b'0', 'Abstract factory', 33),
(132, 4, b'0', 'Model-View-Controller (MVC)', 33),
(133, 1, b'0', 'Reducing code complexity', 34),
(134, 2, b'0', 'Enhancing code modularity', 34),
(135, 3, b'1', 'Improving program efficiency', 34),
(136, 4, b'0', 'Ensuring code security', 34),
(137, 1, b'0', 'C#', 35),
(138, 2, b'0', 'JavaScript', 35),
(139, 3, b'1', 'Scala', 35),
(140, 4, b'0', 'Go', 35),
(141, 1, b'0', 'A program that terminates unexpectedly', 36),
(142, 2, b'1', 'A situation where two or more processes are unable to proceed', 36),
(143, 3, b'0', 'A type of race condition', 36),
(144, 4, b'0', 'A programming error that leads to memory leaks', 36),
(145, 1, b'0', 'Python', 37),
(146, 2, b'0', 'Java', 37),
(147, 3, b'0', 'C++', 37),
(148, 4, b'1', 'C#', 37),
(149, 1, b'1', 'Parallelism executes multiple tasks simultaneously, while concurrency executes multiple tasks sequentially.', 38),
(150, 2, b'0', 'Parallelism executes multiple tasks sequentially, while concurrency executes multiple tasks simultaneously.', 38),
(151, 3, b'0', 'Parallelism and concurrency are synonymous terms.', 38),
(152, 4, b'0', 'Parallelism and concurrency are unrelated concepts in programming.', 38),
(153, 1, b'0', 'Mutex', 39),
(154, 2, b'0', 'Semaphore', 39),
(155, 3, b'1', 'Spinlock', 39),
(156, 4, b'0', 'Barrier', 39),
(157, 1, b'1', 'To ensure data consistency in a concurrent environment', 40),
(158, 2, b'0', 'To eliminate race conditions in multi-threaded applications', 40),
(159, 3, b'0', 'To improve memory access performance in parallel programs', 40),
(160, 4, b'0', 'To enforce strict ordering of thread execution', 40),
(161, 1, b'0', 'Array', 41),
(162, 2, b'0', 'Linked list', 41),
(163, 3, b'1', 'Stack', 41),
(164, 4, b'0', 'Queue', 41),
(165, 1, b'0', 'Array', 42),
(166, 2, b'1', 'Linked list', 42),
(167, 3, b'0', 'Stack', 42),
(168, 4, b'0', 'Queue', 42),
(169, 1, b'0', 'Array', 43),
(170, 2, b'0', 'Linked list', 43),
(171, 3, b'0', 'Stack', 43),
(172, 4, b'1', 'Queue', 43),
(173, 1, b'1', 'Array', 44),
(174, 2, b'0', 'Linked list', 44),
(175, 3, b'0', 'Stack', 44),
(176, 4, b'0', 'Queue', 44),
(177, 1, b'0', 'Array', 45),
(178, 2, b'0', 'Linked list', 45),
(179, 3, b'1', 'Stack', 45),
(180, 4, b'0', 'Queue', 45),
(181, 1, b'0', 'Array', 46),
(182, 2, b'0', 'Linked list', 46),
(183, 3, b'1', 'Stack', 46),
(184, 4, b'0', 'Queue', 46),
(185, 1, b'0', 'Array', 47),
(186, 2, b'0', 'Linked list', 47),
(187, 3, b'0', 'Stack', 47),
(188, 4, b'1', 'Queue', 47),
(189, 1, b'0', 'Array', 48),
(190, 2, b'1', 'Linked list', 48),
(191, 3, b'0', 'Stack', 48),
(192, 4, b'0', 'Queue', 48),
(193, 1, b'1', 'Array', 49),
(194, 2, b'0', 'Linked list', 49),
(195, 3, b'0', 'Stack', 49),
(196, 4, b'0', 'Queue', 49),
(197, 1, b'0', 'Array', 50),
(198, 2, b'1', 'Linked list', 50),
(199, 3, b'0', 'Stack', 50),
(200, 4, b'0', 'Queue', 50),
(201, 1, b'1', 'Linked list', 51),
(202, 2, b'0', 'Array', 51),
(203, 3, b'0', 'Binary tree', 51),
(204, 4, b'0', 'AVL tree', 51),
(205, 1, b'0', 'n', 52),
(206, 2, b'0', 'n - 1', 52),
(207, 3, b'1', 'n(n - 1)', 52),
(208, 4, b'0', '2n', 52),
(209, 1, b'0', 'Preorder traversal', 53),
(210, 2, b'1', 'Inorder traversal', 53),
(211, 3, b'0', 'Postorder traversal', 53),
(212, 4, b'0', 'Level-order traversal', 53),
(213, 1, b'0', '0', 54),
(214, 2, b'0', '1', 54),
(215, 3, b'1', 'n - 1', 54),
(216, 4, b'0', 'n/2', 54),
(217, 1, b'0', 'Depth-first search (DFS)', 55),
(218, 2, b'0', 'Breadth-first search (BFS)', 55),
(219, 3, b'1', 'Dijkstra\'s algorithm', 55),
(220, 4, b'0', 'Prim\'s algorithm', 55),
(221, 1, b'0', 'A spanning tree has the same number of vertices as the original graph.', 56),
(222, 2, b'0', 'A spanning tree can contain cycles.', 56),
(223, 3, b'1', 'A spanning tree is a subgraph that includes all vertices of the original graph.', 56),
(224, 4, b'0', 'A spanning tree can have multiple roots.', 56),
(225, 1, b'0', 'Stack', 57),
(226, 2, b'1', 'Queue', 57),
(227, 3, b'0', 'Priority queue', 57),
(228, 4, b'0', 'Heap', 57),
(229, 1, b'0', 'O(1)', 58),
(230, 2, b'1', 'O(log n)', 58),
(231, 3, b'0', 'O(n)', 58),
(232, 4, b'0', 'O(n log n)', 58),
(233, 1, b'0', 'Depth-first search (DFS)', 59),
(234, 2, b'0', 'Breadth-first search (BFS)', 59),
(235, 3, b'1', 'Dijkstra\'s algorithm', 59),
(236, 4, b'0', 'Prim\'s algorithm', 59),
(237, 1, b'0', 'Cyclic', 60),
(238, 2, b'0', 'Connected', 60),
(239, 3, b'1', 'Acyclic', 60),
(240, 4, b'0', 'Strongly connected', 60),
(241, 1, b'0', 'Stack', 61),
(242, 2, b'0', 'Queue', 61),
(243, 3, b'1', 'Heap', 61),
(244, 4, b'0', 'Linked list', 61),
(245, 1, b'0', 'Array', 62),
(246, 2, b'0', 'Linked list', 62),
(247, 3, b'1', 'Hash table', 62),
(248, 4, b'0', 'Binary search tree', 62),
(249, 1, b'0', 'Preorder traversal', 63),
(250, 2, b'1', 'Inorder traversal', 63),
(251, 3, b'0', 'Postorder traversal', 63),
(252, 4, b'0', 'Breadth-first traversal', 63),
(253, 1, b'0', 'Heap', 64),
(254, 2, b'1', 'Hash table', 64),
(255, 3, b'0', 'AVL tree', 64),
(256, 4, b'0', 'B-tree', 64),
(257, 1, b'0', 'O(1)', 65),
(258, 2, b'1', 'O(log n)', 65),
(259, 3, b'0', 'O(n)', 65),
(260, 4, b'0', 'O(n log n)', 65),
(261, 1, b'0', 'Stack', 66),
(262, 2, b'1', 'Queue', 66),
(263, 3, b'0', 'Linked list', 66),
(264, 4, b'0', 'Hash table', 66),
(265, 1, b'1', 'Heap', 67),
(266, 2, b'0', 'Hash table', 67),
(267, 3, b'0', 'AVL tree', 67),
(268, 4, b'0', 'Red-black tree', 67),
(269, 1, b'0', 'Stack', 68),
(270, 2, b'0', 'Queue', 68),
(271, 3, b'0', 'Linked list', 68),
(272, 4, b'1', 'Balanced search tree', 68),
(273, 1, b'0', 'Stack', 69),
(274, 2, b'0', 'Queue', 69),
(275, 3, b'0', 'Heap', 69),
(276, 4, b'1', 'Deque', 69),
(277, 1, b'0', 'Heap', 70),
(278, 2, b'0', 'Hash table', 70),
(279, 3, b'1', 'AVL tree', 70),
(280, 4, b'0', 'Red-black tree', 70),
(281, 1, b'0', 'A programming language that allows dynamic memory allocation', 71),
(282, 2, b'1', 'A programming technique to solve complex problems by breaking them into smaller overlapping subproblems', 71),
(283, 3, b'0', 'A programming method that focuses on optimizing program runtime', 71),
(284, 4, b'0', 'A programming paradigm that emphasizes object-oriented design', 71),
(285, 1, b'0', 'It simplifies the code and makes it more readable', 72),
(286, 2, b'0', 'It reduces the amount of memory required by a program', 72),
(287, 3, b'0', 'It allows for faster execution of programs', 72),
(288, 4, b'1', 'It can efficiently solve problems with overlapping subproblems', 72),
(289, 1, b'1', 'A technique to store intermediate results to avoid redundant computations', 73),
(290, 2, b'0', 'A method to calculate the time complexity of a program', 73),
(291, 3, b'0', 'A data structure used for efficient memory allocation', 73),
(292, 4, b'0', 'A strategy for optimizing input-output operations', 73),
(293, 1, b'0', 'Sorting a large array of integers in ascending order', 74),
(294, 2, b'1', 'Finding the shortest path in a graph with weighted edges', 74),
(295, 3, b'0', 'Determining if a number is prime or composite', 74),
(296, 4, b'0', 'Concatenating two strings into a single string', 74),
(297, 1, b'0', 'O(1)', 75),
(298, 2, b'0', 'O(log n)', 75),
(299, 3, b'0', 'O(n)', 75),
(300, 4, b'1', 'It depends on the specific problem and the implementation', 75),
(301, 1, b'0', 'Overlapping subproblems', 76),
(302, 2, b'0', 'Optimal substructure', 76),
(303, 3, b'0', 'Memoization', 76),
(304, 4, b'1', 'Divide and conquer', 76),
(305, 1, b'0', 'To find the optimal solution to the original problem', 77),
(306, 2, b'1', 'To break down the problem into smaller manageable parts', 77),
(307, 3, b'0', 'To determine the time complexity of the problem', 77),
(308, 4, b'0', 'To avoid using memoization techniques', 77),
(309, 1, b'1', 'Top-down starts with the smallest subproblems, while bottom-up starts with the original problem', 78),
(310, 2, b'0', 'Top-down uses memoization, while bottom-up does not', 78),
(311, 3, b'0', 'Top-down is slower but more memory-efficient, while bottom-up is faster but requires more memory', 78),
(312, 4, b'0', 'There is no difference between top-down and bottom-up approaches', 78),
(313, 1, b'0', 'Arrays', 79),
(314, 2, b'0', 'Stacks', 79),
(315, 3, b'0', 'Heaps', 79),
(316, 4, b'1', 'Hash tables', 79),
(317, 1, b'0', 'Dynamic programming and recursion are completely unrelated concepts.', 80),
(318, 2, b'1', 'Recursion is a subset of dynamic programming, but not always required.', 80),
(319, 3, b'0', 'Dynamic programming is a subset of recursion, but not all recursive solutions involve dynamic programming.', 80),
(320, 4, b'0', 'Dynamic programming and recursion are synonymous terms in programming.', 80),
(321, 1, b'0', 'Finiteness', 81),
(322, 2, b'0', 'Input', 81),
(323, 3, b'1', 'Randomness', 81),
(324, 4, b'0', 'Output', 81),
(325, 1, b'0', 'O(1)', 82),
(326, 2, b'1', 'O(n)', 82),
(327, 3, b'0', 'O(log n)', 82),
(328, 4, b'0', 'O(n^2)', 82),
(329, 1, b'0', 'QuickSort', 83),
(330, 2, b'0', 'MergeSort', 83),
(331, 3, b'1', 'InsertionSort', 83),
(332, 4, b'0', 'HeapSort', 83),
(333, 1, b'0', 'To measure the actual running time of an algorithm', 84),
(334, 2, b'1', 'To compare different algorithms based on their performance', 84),
(335, 3, b'0', 'To determine the number of steps in an algorithm', 84),
(336, 4, b'0', 'To predict the input size of an algorithm', 84),
(337, 1, b'0', 'Queue', 85),
(338, 2, b'1', 'Stack', 85),
(339, 3, b'0', 'Linked List', 85),
(340, 4, b'0', 'Binary Tree', 85),
(341, 1, b'0', 'O(1)', 86),
(342, 2, b'0', 'O(n)', 86),
(343, 3, b'1', 'O(log n)', 86),
(344, 4, b'0', 'O(n^2)', 86),
(345, 1, b'0', 'Breadth-First Search (BFS)', 87),
(346, 2, b'0', 'Depth-First Search (DFS)', 87),
(347, 3, b'1', 'Dijkstra\'s algorithm', 87),
(348, 4, b'0', 'Prim\'s algorithm', 87),
(349, 1, b'0', 'Stack', 88),
(350, 2, b'0', 'Queue', 88),
(351, 3, b'0', 'Linked List', 88),
(352, 4, b'1', 'Deque (Double-Ended Queue)', 88),
(353, 1, b'0', 'QuickSort', 89),
(354, 2, b'0', 'MergeSort', 89),
(355, 3, b'1', 'CountingSort', 89),
(356, 4, b'0', 'RadixSort', 89),
(357, 1, b'0', 'O(1)', 90),
(358, 2, b'1', 'O(n)', 90),
(359, 3, b'0', 'O(log n)', 90),
(360, 4, b'0', 'O(n^2)', 90),
(361, 1, b'0', 'Merge Sort', 91),
(362, 2, b'0', 'Quick Sort', 91),
(363, 3, b'1', 'Bubble Sort', 91),
(364, 4, b'0', 'Insertion Sort', 91),
(365, 1, b'0', 'Radix Sort', 92),
(366, 2, b'1', 'Heap Sort', 92),
(367, 3, b'0', 'Selection Sort', 92),
(368, 4, b'0', 'Shell Sort', 92),
(369, 1, b'1', 'Binary Search', 93),
(370, 2, b'0', 'Linear Search', 93),
(371, 3, b'0', 'Jump Search', 93),
(372, 4, b'0', 'Interpolation Search', 93),
(373, 1, b'0', 'Linear Search', 94),
(374, 2, b'0', 'Exponential Search', 94),
(375, 3, b'0', 'Fibonacci Search', 94),
(376, 4, b'1', 'Jump Search', 94),
(377, 1, b'0', 'Quick Sort', 95),
(378, 2, b'1', 'Merge Sort', 95),
(379, 3, b'0', 'Bubble Sort', 95),
(380, 4, b'0', 'Selection Sort', 95),
(381, 1, b'1', 'Quick Sort', 96),
(382, 2, b'0', 'Radix Sort', 96),
(383, 3, b'0', 'Merge Sort', 96),
(384, 4, b'0', 'Shell Sort', 96),
(385, 1, b'0', 'Insertion Sort', 97),
(386, 2, b'0', 'Selection Sort', 97),
(387, 3, b'1', 'Quick Sort', 97),
(388, 4, b'0', 'Heap Sort', 97),
(389, 1, b'0', 'Linear Search', 98),
(390, 2, b'1', 'Binary Search', 98),
(391, 3, b'0', 'Interpolation Search', 98),
(392, 4, b'0', 'Jump Search', 98),
(393, 1, b'0', 'Heap Sort', 99),
(394, 2, b'0', 'Shell Sort', 99),
(395, 3, b'0', 'Bubble Sort', 99),
(396, 4, b'1', 'Radix Sort', 99),
(397, 1, b'1', 'Linear Search', 100),
(398, 2, b'0', 'Binary Search', 100),
(399, 3, b'0', 'Interpolation Search', 100),
(400, 4, b'0', 'Exponential Search', 100),
(401, 1, b'0', 'Depth-First Search', 101),
(402, 1, b'0', 'Depth-First Search', 101),
(403, 3, b'1', 'Dijkstra\'s Algorithm', 101),
(404, 4, b'0', 'Bellman-Ford Algorithm', 101),
(405, 1, b'0', 'Kruskal\'s Algorithm', 102),
(406, 2, b'0', 'Prim\'s Algorithm', 102),
(407, 3, b'0', 'Bellman-Ford Algorithm', 102),
(408, 4, b'1', 'Depth-First Search', 102),
(409, 1, b'1', 'Floyd-Warshall Algorithm', 103),
(410, 2, b'0', 'Kruskal\'s Algorithm', 103),
(411, 3, b'0', 'Prim\'s Algorithm', 103),
(412, 4, b'0', 'Bellman-Ford Algorithm', 103),
(413, 1, b'0', 'Bellman-Ford Algorithm', 104),
(414, 2, b'0', 'Dijkstra\'s Algorithm', 104),
(415, 3, b'1', 'Kruskal\'s Algorithm', 104),
(416, 4, b'0', 'Depth-First Search', 104),
(417, 1, b'0', 'Breadth-First Search', 105),
(418, 2, b'0', 'Dijkstra\'s Algorithm', 105),
(419, 3, b'1', 'Depth-First Search', 105),
(420, 4, b'0', 'Prim\'s Algorithm', 105),
(421, 1, b'0', 'Dijkstra\'s Algorithm', 106),
(422, 2, b'0', 'Bellman-Ford Algorithm', 106),
(423, 3, b'0', 'Kruskal\'s Algorithm', 106),
(424, 4, b'1', 'Tarjan\'s Algorithm', 106),
(425, 1, b'0', 'Breadth-First Search', 107),
(426, 2, b'0', 'Depth-First Search', 107),
(427, 3, b'1', 'Ford-Fulkerson Algorithm', 107),
(428, 4, b'0', 'Prim\'s Algorithm', 107),
(429, 1, b'0', 'Bellman-Ford Algorithm', 108),
(430, 2, b'1', 'Floyd-Warshall Algorithm', 108),
(431, 3, b'0', 'Kruskal\'s Algorithm', 108),
(432, 4, b'0', 'Dijkstra\'s Algorithm', 108),
(433, 1, b'0', 'Kruskal\'s Algorithm', 109),
(434, 2, b'0', 'Prim\'s Algorithm', 109),
(435, 3, b'1', 'Depth-First Search', 109),
(436, 4, b'0', 'Breadth-First Search', 109),
(437, 1, b'0', 'Bellman-Ford Algorithm', 110),
(438, 2, b'0', 'Kruskal\'s Algorithm', 110),
(439, 3, b'0', 'Prim\'s Algorithm', 110),
(440, 4, b'1', 'Ford-Fulkerson Algorithm', 110),
(441, 1, b'1', 'Greedy algorithm', 111),
(442, 2, b'0', 'Dynamic programming', 111),
(443, 3, b'0', 'Backtracking', 111),
(444, 4, b'0', 'Divide-and-conquer', 111),
(445, 1, b'0', 'Dynamic programming', 112),
(446, 2, b'0', 'Backtracking', 112),
(447, 3, b'1', 'Divide-and-conquer', 112),
(448, 4, b'0', 'Greedy algorithm', 112),
(449, 1, b'0', 'Optimal substructure and overlapping subproblems', 113),
(450, 2, b'0', 'Directed acyclic graph (DAG)', 113),
(451, 3, b'0', 'Breaking down into subproblems and combining solutions', 113),
(452, 4, b'1', 'Locally optimal choices leading to a globally optimal solution', 113),
(453, 1, b'0', 'Divide-and-conquer', 114),
(454, 2, b'0', 'Dynamic programming', 114),
(455, 3, b'1', 'Backtracking', 114),
(456, 4, b'0', 'Greedy algorithm', 114),
(457, 1, b'0', 'Greedy algorithm', 115),
(458, 2, b'1', 'Dynamic programming', 115),
(459, 3, b'0', 'Divide-and-conquer', 115),
(460, 4, b'0', 'Backtracking', 115),
(461, 1, b'0', 'Greedy algorithm', 116),
(462, 2, b'0', 'Dynamic programming', 116),
(463, 3, b'0', 'Divide-and-conquer', 116),
(464, 4, b'1', 'Backtracking', 116),
(465, 1, b'0', 'Greedy algorithm', 117),
(466, 2, b'0', 'Dynamic programming', 117),
(467, 3, b'0', 'Backtracking', 117),
(468, 4, b'1', 'Metaheuristics', 117),
(469, 1, b'0', 'Greedy algorithm', 118),
(470, 2, b'1', 'Dijkstra\'s algorithm', 118),
(471, 3, b'0', 'Divide-and-conquer', 118),
(472, 4, b'0', 'Backtracking', 118),
(473, 1, b'1', 'Greedy algorithm', 119),
(474, 2, b'0', 'Dynamic programming', 119),
(475, 3, b'0', 'Divide-and-conquer', 119),
(476, 4, b'0', 'Backtracking', 119),
(477, 1, b'0', 'Greedy algorithm', 120),
(478, 2, b'1', 'Dynamic programming', 120),
(479, 3, b'0', 'Divide-and-conquer', 120),
(480, 4, b'0', 'Backtracking', 120),
(481, 1, b'0', 'Ensuring secure data transmission', 121),
(482, 2, b'0', 'Managing network congestion', 121),
(483, 3, b'1', 'Assigning unique addresses to devices', 121),
(484, 4, b'0', 'Establishing wireless connections', 121),
(485, 1, b'0', 'Physical layer', 122),
(486, 2, b'0', 'Data link layer', 122),
(487, 3, b'1', 'Network layer', 122),
(488, 4, b'0', 'Transport layer', 122),
(489, 1, b'0', 'FTP', 123),
(490, 2, b'0', 'HTTP', 123),
(491, 3, b'1', 'SMTP', 123),
(492, 4, b'0', 'SNMP', 123),
(493, 1, b'0', 'Router', 124),
(494, 2, b'0', 'Hub', 124),
(495, 3, b'1', 'Switch', 124),
(496, 4, b'0', 'Modem', 124),
(497, 1, b'0', 'Encrypting network traffic', 125),
(498, 2, b'1', 'Identifying the network portion of an IP address', 125),
(499, 3, b'0', 'Ensuring reliable data transmission', 125),
(500, 4, b'0', 'Assigning IP addresses dynamically', 125),
(501, 1, b'0', 'FTP', 126),
(502, 2, b'0', 'SMTP', 126),
(503, 3, b'1', 'HTTPS', 126),
(504, 4, b'0', 'POP3', 126),
(505, 1, b'0', '1 Gbps', 127),
(506, 2, b'0', '10 Mbps', 127),
(507, 3, b'0', '100 Mbps', 127),
(508, 4, b'1', '1000 Mbps', 127),
(509, 1, b'0', 'Translating domain names to IP addresses', 128),
(510, 2, b'0', 'Filtering network traffic', 128),
(511, 3, b'0', 'Establishing wireless connections', 128),
(512, 4, b'1', 'Providing a path for network traffic outside the local network', 128),
(513, 1, b'0', 'FTP', 129),
(514, 2, b'0', 'Telnet', 129),
(515, 3, b'1', 'SSH', 129),
(516, 4, b'0', 'HTTP', 129),
(517, 1, b'0', 'Assigning IP addresses to devices', 130),
(518, 2, b'0', 'Transferring files between computers', 130),
(519, 3, b'1', 'Converting domain names to IP addresses', 130),
(520, 4, b'0', 'Managing network security', 130),
(521, 1, b'0', 'OSPF', 131),
(522, 2, b'0', 'BGP', 131),
(523, 3, b'1', 'RIP', 131),
(524, 4, b'0', 'EIGRP', 131),
(525, 1, b'0', 'Circuit switching', 132),
(526, 2, b'0', 'Packet switching', 132),
(527, 3, b'0', 'Cell switching', 132),
(528, 4, b'1', 'Ethernet switching', 132),
(529, 1, b'1', 'OSPF', 133),
(530, 2, b'0', 'RIP', 133),
(531, 3, b'0', 'EIGRP', 133),
(532, 4, b'0', 'BGP', 133),
(533, 1, b'1', 'Network layer', 134),
(534, 2, b'0', 'Data link layer', 134),
(535, 3, b'0', 'Transport layer', 134),
(536, 4, b'0', 'Session layer', 134),
(537, 1, b'0', 'To connect two different networks', 135),
(538, 2, b'0', 'To provide redundancy for network connections', 135),
(539, 3, b'0', 'To filter incoming and outgoing network traffic', 135),
(540, 4, b'1', 'To forward packets between networks', 135),
(541, 1, b'0', 'show interfaces', 136),
(542, 2, b'0', 'show ip interface brief', 136),
(543, 3, b'1', 'show ip route', 136),
(544, 4, b'0', 'show running-config', 136),
(545, 1, b'0', 'Ethernet switching', 137),
(546, 2, b'0', 'VLAN switching', 137),
(547, 3, b'0', 'Token ring switching', 137),
(548, 4, b'1', 'ATM switching', 137),
(549, 1, b'0', 'DNS', 138),
(550, 2, b'1', 'DHCP', 138),
(551, 3, b'0', 'ARP', 138),
(552, 4, b'0', 'ICMP', 138),
(553, 1, b'1', 'ip default-gateway', 139),
(554, 2, b'0', 'ip route', 139),
(555, 3, b'0', 'default-gateway', 139),
(556, 4, b'0', 'ip helper-address', 139),
(557, 1, b'0', 'RIPv1', 140),
(558, 2, b'0', 'OSPF', 140),
(559, 3, b'1', 'EIGRP', 140),
(560, 4, b'0', 'BGP', 140),
(561, 1, b'0', 'RSA', 141),
(562, 2, b'1', 'AES', 141),
(563, 3, b'0', 'Diffie-Hellman', 141),
(564, 4, b'0', 'HMAC', 141),
(565, 1, b'0', 'To encrypt network traffic', 142),
(566, 2, b'0', 'To authenticate users', 142),
(567, 3, b'1', 'To prevent unauthorized access', 142),
(568, 4, b'0', 'To manage network bandwidth', 142),
(569, 1, b'0', 'HTTP', 143),
(570, 2, b'0', 'SMTP', 143),
(571, 3, b'1', 'SSH', 143),
(572, 4, b'0', 'FTP', 143),
(573, 1, b'0', 'Protection against malware', 144),
(574, 2, b'0', 'Enhanced network performance', 144),
(575, 3, b'1', 'Secure remote access', 144),
(576, 4, b'0', 'Preventing denial-of-service attacks', 144),
(577, 1, b'1', 'Secure Socket Layer', 145),
(578, 2, b'0', 'Secure System Locator', 145),
(579, 3, b'0', 'Symmetric Security Layer', 145),
(580, 4, b'0', 'Secure Session Link', 145),
(581, 1, b'0', 'DES', 146),
(582, 2, b'0', 'RSA', 146),
(583, 3, b'1', 'SHA-256', 146),
(584, 4, b'0', 'RC4', 146),
(585, 1, b'0', 'Brute force attack', 147),
(586, 2, b'1', 'Man-in-the-middle attack', 147),
(587, 3, b'0', 'Denial-of-service attack', 147),
(588, 4, b'0', 'SQL injection attack', 147),
(589, 1, b'0', 'Encrypting network traffic', 148),
(590, 2, b'1', 'Authenticating a user', 148),
(591, 3, b'0', 'Preventing denial-of-service attacks', 148),
(592, 4, b'0', 'Verifying the integrity of data', 148),
(593, 1, b'0', 'password123', 149),
(594, 2, b'0', '123456789', 149),
(595, 3, b'1', 'P@ssw0rd!', 149),
(596, 4, b'0', 'qwerty', 149),
(597, 1, b'0', 'Application layer', 150),
(598, 2, b'1', 'Presentation layer', 150),
(599, 3, b'0', 'Transport layer', 150),
(600, 4, b'0', 'Data link layer', 150),
(601, 1, b'1', 'Network congestion', 151),
(602, 2, b'0', 'Faulty network cables', 151),
(603, 3, b'0', 'Outdated network protocols', 151),
(604, 4, b'0', 'Hardware failure', 151),
(605, 1, b'0', 'Router', 152),
(606, 2, b'0', 'Switch', 152),
(607, 3, b'0', 'Firewall', 152),
(608, 4, b'1', 'DNS server', 152),
(609, 1, b'0', 'FTP', 153),
(610, 2, b'0', 'SMTP', 153),
(611, 3, b'1', 'SSH', 153),
(612, 4, b'0', 'SNMP', 153),
(613, 1, b'0', 'Maximum Transfer Unit', 154),
(614, 2, b'1', 'Maximum Transmission Unit', 154),
(615, 3, b'0', 'Minimum Transmission Unit', 154),
(616, 4, b'0', 'Minimum Transfer Unit', 154),
(617, 1, b'1', 'Wireshark', 155),
(618, 2, b'0', 'Ping', 155),
(619, 3, b'0', 'Nmap', 155),
(620, 4, b'0', 'Tracert', 155),
(621, 1, b'1', 'Prioritizing network traffic', 156),
(622, 2, b'0', 'Securing network connections', 156),
(623, 3, b'0', 'Optimizing wireless signal strength', 156),
(624, 4, b'0', 'Monitoring network performance', 156),
(625, 1, b'0', '255.0.0.0', 157),
(626, 2, b'0', '255.255.0.0', 157),
(627, 3, b'1', '255.255.255.0', 157),
(628, 4, b'0', '255.255.255.255', 157),
(629, 1, b'0', 'nslookup', 158),
(630, 2, b'0', 'netstat', 158),
(631, 3, b'0', 'traceroute', 158),
(632, 4, b'1', 'ping', 158),
(633, 1, b'1', 'Denial of Service (DoS)', 159),
(634, 2, b'0', 'Man-in-the-Middle (MitM)', 159),
(635, 3, b'0', 'Phishing', 159),
(636, 4, b'0', 'Spoofing', 159),
(637, 1, b'1', 'Encrypting network traffic', 160),
(638, 2, b'0', 'Blocking unauthorized access', 160),
(639, 3, b'0', 'Load balancing network traffic', 160),
(640, 4, b'0', 'Restricting website access', 160),
(641, 1, b'0', 'To replicate human intelligence', 161),
(642, 2, b'1', 'To enhance human capabilities', 161),
(643, 3, b'0', 'To automate repetitive tasks', 161),
(644, 4, b'0', 'To create conscious machines', 161),
(645, 1, b'0', 'Depth-first search', 162),
(646, 2, b'0', 'Breadth-first search', 162),
(647, 3, b'1', 'A* search', 162),
(648, 4, b'0', 'Random search', 162),
(649, 1, b'0', 'Frames', 163),
(650, 2, b'0', 'Neural networks', 163),
(651, 3, b'1', 'Production rules', 163),
(652, 4, b'0', 'Genetic algorithms', 163),
(653, 1, b'1', 'Ability to handle uncertainty', 164),
(654, 2, b'0', 'Ability to learn from experience', 164),
(655, 3, b'0', 'Ability to process large amounts of data quickly', 164),
(656, 4, b'0', 'Ability to mimic human behavior', 164),
(657, 1, b'0', 'K-means clustering', 165),
(658, 2, b'0', 'Decision tree', 165),
(659, 3, b'0', 'Reinforcement learning', 165),
(660, 4, b'1', 'Support Vector Machine (SVM)', 165),
(661, 1, b'1', 'A test to evaluate a machine\'s ability to exhibit intelligent behavior', 166),
(662, 2, b'0', 'A test to determine a machine\'s processing speed', 166),
(663, 3, b'0', 'A test to assess a machine\'s memory capacity', 166),
(664, 4, b'0', 'A test to measure a machine\'s energy efficiency', 166),
(665, 1, b'0', 'Object recognition', 167),
(666, 2, b'0', 'Speech synthesis', 167),
(667, 3, b'1', 'Sentiment analysis', 167),
(668, 4, b'0', 'Reinforcement learning', 167),
(669, 1, b'1', 'To balance between learning new information and using known information', 168),
(670, 2, b'0', 'To optimize computational resources in a neural network', 168),
(671, 3, b'0', 'To find the most efficient search algorithm for a given problem', 168),
(672, 4, b'0', 'To decide between supervised and unsupervised learning', 168),
(673, 1, b'0', 'Siri', 169),
(674, 2, b'0', 'Deep Blue (chess-playing computer)', 169),
(675, 3, b'0', 'Roomba (autonomous vacuum cleaner)', 169),
(676, 4, b'1', 'HAL 9000 (fictional AI from the movie \"2001: A Space Odyssey\")', 169),
(677, 1, b'0', 'To learn from a dataset with labeled examples', 170),
(678, 2, b'1', 'To optimize a system\'s performance through trial and error', 170),
(679, 3, b'0', 'To identify patterns in unstructured data', 170),
(680, 4, b'0', 'To simulate human decision-making processes', 170),
(681, 1, b'1', 'Supervised learning', 171),
(682, 2, b'0', 'Unsupervised learning', 171),
(683, 3, b'0', 'Reinforcement learning', 171),
(684, 4, b'0', 'Semi-supervised learning', 171),
(685, 1, b'1', 'Decision trees', 172),
(686, 2, b'0', 'K-means clustering', 172),
(687, 3, b'0', 'Principal Component Analysis (PCA)', 172),
(688, 4, b'0', 'Association rules', 172),
(689, 1, b'0', 'Predicting future outcomes', 173),
(690, 2, b'0', 'Minimizing errors in the training process', 173),
(691, 3, b'1', 'Finding hidden patterns or structures in data', 173),
(692, 4, b'0', 'Maximizing rewards through trial and error', 173),
(693, 1, b'0', 'K-nearest neighbors (KNN)', 174),
(694, 2, b'0', 'Random forests', 174),
(695, 3, b'0', 'Support Vector Machines (SVM)', 174),
(696, 4, b'1', 'Principal Component Analysis (PCA)', 174),
(697, 1, b'0', 'K-means clustering', 175),
(698, 2, b'0', 'Naive Bayes', 175),
(699, 3, b'1', 'Linear regression', 175),
(700, 4, b'0', 'Apriori algorithm', 175),
(701, 1, b'0', 'Decision trees', 176),
(702, 2, b'1', 'K-means clustering', 176),
(703, 3, b'0', 'Random forests', 176),
(704, 4, b'0', 'Support Vector Machines (SVM)', 176),
(705, 1, b'0', 'It is used to train the model.', 177),
(706, 2, b'0', 'It is used to test the model\'s performance.', 177),
(707, 3, b'1', 'It is used to fine-tune hyperparameters.', 177),
(708, 4, b'0', 'It is used to visualize the data.', 177),
(709, 1, b'1', 'K-nearest neighbors (KNN)', 178),
(710, 2, b'0', 'Decision trees', 178),
(711, 3, b'0', 'Logistic regression', 178),
(712, 4, b'0', 'Gradient boosting', 178),
(713, 1, b'0', 'K-means clustering', 179),
(714, 2, b'0', 'Principal Component Analysis (PCA)', 179),
(715, 3, b'1', 'Imputation', 179),
(716, 4, b'0', 'Support Vector Machines (SVM)', 179),
(717, 1, b'1', 'Random forests', 180),
(718, 2, b'0', 'Naive Bayes', 180),
(719, 3, b'0', 'Linear regression', 180),
(720, 4, b'0', 'Association rules', 180),
(721, 1, b'0', 'Decision trees', 181),
(722, 2, b'1', 'Support Vector Machines (SVM)', 181),
(723, 3, b'0', 'K-means clustering', 181),
(724, 4, b'0', 'Random forests', 181),
(725, 1, b'1', 'Identifying the sentiment of a text', 182),
(726, 2, b'0', 'Extracting key phrases from a text', 182),
(727, 3, b'0', 'Translating text from one language to another', 182),
(728, 4, b'0', 'Summarizing a given text', 182),
(729, 1, b'0', 'Singular Value Decomposition (SVD)', 183),
(730, 2, b'0', 'Principal Component Analysis (PCA)', 183),
(731, 3, b'1', 'Bag-of-Words (BoW)', 183),
(732, 4, b'0', 'K-nearest neighbors (KNN)', 183),
(733, 1, b'0', 'Naive Bayes', 184),
(734, 2, b'0', 'Long Short-Term Memory (LSTM)', 184),
(735, 3, b'1', 'Conditional Random Fields (CRF)', 184),
(736, 4, b'0', 'Gradient Boosting Machines (GBM)', 184),
(737, 1, b'0', 'Removing stop words from a text', 185),
(738, 2, b'1', 'Converting words to their base or root form', 185),
(739, 3, b'0', 'Tokenizing a text into individual words', 185),
(740, 4, b'0', 'Determining the sentiment of a text', 185),
(741, 1, b'0', 'Accuracy', 186),
(742, 2, b'1', 'F1 score', 186),
(743, 3, b'0', 'Mean Absolute Error (MAE)', 186),
(744, 4, b'0', 'Root Mean Squared Error (RMSE)', 186),
(745, 1, b'0', 'Oversampling the minority class', 187),
(746, 2, b'0', 'Undersampling the majority class', 187),
(747, 3, b'1', 'Synthetic Minority Over-sampling Technique (SMOTE)', 187),
(748, 4, b'0', 'Adaptive boosting (AdaBoost)', 187),
(749, 1, b'0', 'K-means clustering', 188),
(750, 2, b'1', 'Latent Semantic Analysis (LSA)', 188),
(751, 3, b'0', 'Recurrent Neural Networks (RNN)', 188),
(752, 4, b'0', 'Genetic algorithms', 188),
(753, 1, b'0', 'Term Frequency-Inverse Document Frequency (TF-IDF)', 189),
(754, 2, b'0', 'Word2Vec', 189),
(755, 3, b'0', 'GloVe', 189),
(756, 4, b'1', 'All of the above', 189),
(757, 1, b'0', 'Principal Component Analysis (PCA)', 190),
(758, 2, b'0', 'Chi-square test', 190),
(759, 3, b'1', 'Recursive Feature Elimination (RFE)', 190),
(760, 4, b'0', 'Support Vector Machines (SVM)', 190),
(761, 1, b'0', 'Linear activation', 191),
(762, 2, b'0', 'Sigmoid activation', 191),
(763, 3, b'1', 'ReLU activation', 191),
(764, 4, b'0', 'Tanh activation', 191),
(765, 1, b'1', 'To prevent overfitting', 192),
(766, 2, b'0', 'To increase the model\'s capacity', 192),
(767, 3, b'0', 'To speed up the training process', 192),
(768, 4, b'0', 'To enhance the model\'s interpretability', 192),
(769, 1, b'0', 'Convolutional layer', 193),
(770, 2, b'1', 'Pooling layer', 193),
(771, 3, b'0', 'Fully connected layer', 193),
(772, 4, b'0', 'Activation layer', 193),
(773, 1, b'1', 'To update the weights and biases of a neural network', 194),
(774, 2, b'0', 'To regularize the model\'s weights', 194),
(775, 3, b'0', 'To initialize the model\'s parameters', 194),
(776, 4, b'0', 'To determine the learning rate for training', 194),
(777, 1, b'0', 'Faster training times', 195),
(778, 2, b'0', 'Improved interpretability', 195),
(779, 3, b'1', 'Ability to capture long-term dependencies', 195),
(780, 4, b'0', 'Lower memory requirements', 195),
(781, 1, b'1', 'Gradient clipping', 196),
(782, 2, b'0', 'Batch normalization', 196),
(783, 3, b'0', 'Weight initialization', 196),
(784, 4, b'0', 'Learning rate decay', 196),
(785, 1, b'0', 'Mean Squared Error (MSE)', 197),
(786, 2, b'1', 'Binary Cross-Entropy', 197),
(787, 3, b'0', 'Categorical Cross-Entropy', 197),
(788, 4, b'0', 'Kullback-Leibler Divergence', 197),
(789, 1, b'1', 'To compute the gradients of the model\'s parameters', 198),
(790, 2, b'0', 'To determine the optimal learning rate', 198),
(791, 3, b'0', 'To update the weights and biases of the model', 198),
(792, 4, b'0', 'To initialize the model\'s weights', 198),
(793, 1, b'0', 'Convolutional layer', 199),
(794, 2, b'0', 'Pooling layer', 199),
(795, 3, b'0', 'Fully connected layer', 199),
(796, 4, b'1', 'Recurrent layer', 199),
(797, 1, b'1', 'Convolutional Neural Network (CNN)', 200),
(798, 2, b'0', 'Recurrent Neural Network (RNN)', 200),
(799, 3, b'0', 'Generative Adversarial Network (GAN)', 200),
(800, 4, b'0', 'Transformer', 200),
(801, 1, b'1', 'Stores data in a structured format', 201),
(802, 2, b'0', 'Stores data in an unorganized manner', 201),
(803, 3, b'0', 'Allows only one table for data storage', 201),
(804, 4, b'0', 'Does not support data retrieval operations', 201),
(805, 1, b'0', 'To increase redundancy in the database', 202),
(806, 2, b'0', 'To decrease data integrity', 202),
(807, 3, b'1', 'To minimize data duplication and dependency', 202),
(808, 4, b'0', 'To eliminate all relationships between tables', 202),
(809, 1, b'1', 'SELECT', 203),
(810, 2, b'0', 'DELETE', 203),
(811, 3, b'0', 'UPDATE', 203),
(812, 4, b'0', 'INSERT', 203),
(813, 1, b'0', 'FROM', 204),
(814, 2, b'0', 'ORDER BY', 204),
(815, 3, b'1', 'WHERE', 204),
(816, 4, b'0', 'GROUP BY', 204),
(817, 1, b'0', 'Define relationships between tables', 205),
(818, 2, b'0', 'Sort records in ascending order', 205),
(819, 3, b'1', 'Ensure data uniqueness within a table', 205),
(820, 4, b'0', 'Store large binary data', 205),
(821, 1, b'0', 'CREATE', 206),
(822, 2, b'0', 'ALTER', 206),
(823, 3, b'1', 'SELECT', 206),
(824, 4, b'0', 'TRUNCATE', 206),
(825, 1, b'0', 'First normal form (1NF)', 207),
(826, 2, b'0', 'Second normal form (2NF)', 207),
(827, 3, b'1', 'Third normal form (3NF)', 207),
(828, 4, b'0', 'Fourth normal form (4NF)', 207),
(829, 1, b'1', 'INSERT', 208),
(830, 2, b'0', 'UPDATE', 208),
(831, 3, b'0', 'DELETE', 208),
(832, 4, b'0', 'ALTER', 208),
(833, 1, b'1', 'INNER JOIN', 209),
(834, 2, b'0', 'LEFT JOIN', 209),
(835, 3, b'0', 'RIGHT JOIN', 209),
(836, 4, b'0', 'FULL OUTER JOIN', 209),
(837, 1, b'0', 'To define primary and foreign key relationships', 210),
(838, 2, b'0', 'To sort data in a specific order', 210),
(839, 3, b'1', 'To provide faster data retrieval', 210),
(840, 4, b'0', 'To enforce data integrity constraints', 210),
(841, 1, b'0', 'Primary key', 211),
(842, 2, b'1', 'Foreign key', 211),
(843, 3, b'0', 'Index', 211),
(844, 4, b'0', 'Trigger', 211),
(845, 1, b'0', 'First normal form (1NF)', 212),
(846, 2, b'0', 'Second normal form (2NF)', 212),
(847, 3, b'1', 'Third normal form (3NF)', 212),
(848, 4, b'0', 'Fourth normal form (4NF)', 212),
(849, 1, b'0', 'Diamond shape', 213),
(850, 2, b'0', 'Circle shape', 213),
(851, 3, b'1', 'Triangle shape', 213),
(852, 4, b'0', 'Rectangle shape', 213),
(853, 1, b'0', 'To enforce referential integrity', 214),
(854, 2, b'1', 'To speed up data retrieval', 214),
(855, 3, b'0', 'To define primary and foreign key relationships', 214),
(856, 4, b'0', 'To ensure data consistency', 214),
(857, 1, b'0', 'SELECT', 215),
(858, 2, b'0', 'INSERT', 215),
(859, 3, b'1', 'CREATE', 215),
(860, 4, b'0', 'UPDATE', 215),
(861, 1, b'0', 'One-to-one', 216),
(862, 2, b'0', 'One-to-many', 216),
(863, 3, b'1', 'Many-to-many', 216),
(864, 4, b'0', 'Self-referencing', 216),
(865, 1, b'0', 'Breaking down a table into multiple smaller tables', 217),
(866, 2, b'1', 'Adding redundancy to a database for improved performance', 217),
(867, 3, b'0', 'Removing redundant data from a table', 217),
(868, 4, b'0', 'Restructuring a database schema', 217),
(869, 1, b'1', 'SELECT', 218),
(870, 2, b'0', 'CREATE', 218),
(871, 3, b'0', 'ALTER', 218),
(872, 4, b'0', 'COMMIT', 218),
(873, 1, b'1', 'Atomicity, Consistency, Isolation, Durability', 219),
(874, 2, b'0', 'Aggregate, Cache, Index, Delete', 219),
(875, 3, b'0', 'Association, Connection, Integrity, Dependency', 219),
(876, 4, b'0', 'Authorization, Concurrency, Isolation, Data', 219),
(877, 1, b'0', 'UNIQUE', 220),
(878, 2, b'0', 'CHECK', 220),
(879, 3, b'0', 'NOT NULL', 220),
(880, 4, b'1', 'PRIMARY KEY', 220),
(881, 1, b'1', 'JOIN', 221),
(882, 2, b'0', 'UNION', 221),
(883, 3, b'0', 'INTERSECT', 221),
(884, 4, b'0', 'OUTER JOIN', 221),
(885, 1, b'0', 'Clustered index', 222),
(886, 2, b'1', 'Non-clustered index', 222),
(887, 3, b'0', 'Bitmap index', 222),
(888, 4, b'0', 'Partitioned index', 222),
(889, 1, b'0', 'GROUP BY', 223),
(890, 2, b'0', 'ORDER BY', 223),
(891, 3, b'1', 'WHERE', 223),
(892, 4, b'0', 'HAVING', 223),
(893, 1, b'0', 'SELECT', 224),
(894, 2, b'0', 'UPDATE', 224),
(895, 3, b'0', 'DELETE', 224),
(896, 4, b'1', 'INSERT', 224),
(897, 1, b'1', 'INNER JOIN', 225),
(898, 2, b'0', 'LEFT JOIN', 225),
(899, 3, b'0', 'RIGHT JOIN', 225),
(900, 4, b'0', 'FULL OUTER JOIN', 225),
(901, 1, b'0', 'B-tree index', 226),
(902, 2, b'0', 'Hash index', 226),
(903, 3, b'1', 'Bitmap index', 226),
(904, 4, b'0', 'Covering index', 226),
(905, 1, b'0', 'GROUP BY', 227),
(906, 2, b'1', 'ORDER BY', 227),
(907, 3, b'0', 'HAVING', 227),
(908, 4, b'0', 'WHERE', 227),
(909, 1, b'0', 'Query caching', 228),
(910, 2, b'0', 'Query rewriting', 228),
(911, 3, b'1', 'Materialized views', 228),
(912, 4, b'0', 'Indexing', 228),
(913, 1, b'1', 'MAX()', 229),
(914, 2, b'0', 'MIN()', 229),
(915, 3, b'0', 'AVG()', 229),
(916, 4, b'0', 'SUM()', 229),
(917, 1, b'1', 'Query profiling', 230),
(918, 2, b'0', 'Query parsing', 230),
(919, 3, b'0', 'Query monitoring', 230),
(920, 4, b'0', 'Query indexing', 230),
(921, 1, b'1', 'Structured schema', 231),
(922, 2, b'0', 'Horizontal scalability', 231),
(923, 3, b'0', 'Flexible data models', 231),
(924, 4, b'0', 'High availability', 231),
(925, 1, b'0', 'Key-value', 232),
(926, 2, b'0', 'Document', 232),
(927, 3, b'1', 'Graph', 232),
(928, 4, b'0', 'Columnar', 232),
(929, 1, b'1', 'Cassandra', 233),
(930, 2, b'0', 'MongoDB', 233),
(931, 3, b'0', 'Redis', 233),
(932, 4, b'0', 'CouchDB', 233),
(933, 1, b'0', 'Apache Kafka', 234),
(934, 2, b'1', 'Hadoop', 234),
(935, 3, b'0', 'Apache Spark', 234),
(936, 4, b'0', 'Elasticsearch', 234),
(937, 1, b'1', 'Consistency, Availability, and Partition tolerance are mutually exclusive.', 235),
(938, 2, b'0', 'Consistency and Availability are mutually exclusive.', 235),
(939, 3, b'0', 'Availability and Partition tolerance are mutually exclusive.', 235),
(940, 4, b'0', 'Consistency and Partition tolerance are mutually exclusive.', 235),
(941, 1, b'0', 'MongoDB', 236),
(942, 2, b'1', 'Cassandra', 236),
(943, 3, b'0', 'Redis', 236),
(944, 4, b'0', 'CouchDB', 236),
(945, 1, b'0', 'Apache Kafka', 237),
(946, 2, b'0', 'Hadoop', 237),
(947, 3, b'1', 'Apache Spark', 237),
(948, 4, b'0', 'Elasticsearch', 237),
(949, 1, b'0', 'MongoDB', 238),
(950, 2, b'0', 'Cassandra', 238),
(951, 3, b'1', 'Redis', 238),
(952, 4, b'0', 'CouchDB', 238),
(953, 1, b'0', 'Apache Kafka', 239),
(954, 2, b'0', 'Hadoop', 239),
(955, 3, b'0', 'Apache Spark', 239),
(956, 4, b'1', 'Elasticsearch', 239),
(957, 1, b'0', 'Key-value', 240),
(958, 2, b'1', 'Document', 240),
(959, 3, b'0', 'Graph', 240),
(960, 4, b'0', 'Columnar', 240),
(961, 1, b'1', '<a>', 241),
(962, 2, b'0', '<h1>', 241),
(963, 3, b'0', '<p>', 241),
(964, 4, b'0', '<div>', 241),
(965, 1, b'0', 'Using the <style> tag', 242),
(966, 2, b'0', 'Using the <link> tag', 242),
(967, 3, b'1', 'Using the class attribute', 242),
(968, 4, b'0', 'Using the id attribute', 242),
(969, 1, b'0', 'background-color', 243),
(970, 2, b'0', 'font-size', 243),
(971, 3, b'1', 'color', 243),
(972, 4, b'0', 'text-decoration', 243),
(973, 1, b'0', '<style>path/to/file.css</style>', 244),
(974, 2, b'1', '<link href=\"path/to/file.css\" rel=\"stylesheet\">', 244),
(975, 3, b'0', '<script src=\"path/to/file.css\"></script>', 244),
(976, 4, b'0', '<css>path/to/file.css</css>', 244),
(977, 1, b'1', 'margin', 245),
(978, 2, b'0', 'padding', 245),
(979, 3, b'0', 'border', 245),
(980, 4, b'0', 'display', 245),
(981, 1, b'1', '<h1>', 246),
(982, 2, b'0', '<p>', 246),
(983, 3, b'0', '<a>', 246),
(984, 4, b'0', '<div>', 246),
(985, 1, b'1', '<img src=\"image.jpg\" alt=\"Image\">', 247),
(986, 2, b'0', '<p>image.jpg</p>', 247),
(987, 3, b'0', '<a href=\"image.jpg\"></a>', 247),
(988, 4, b'0', '<div style=\"background-image: url(image.jpg)\"></div>', 247),
(989, 1, b'0', 'text-align: center;', 248),
(990, 2, b'1', 'margin: auto;', 248),
(991, 3, b'0', 'padding: center;', 248),
(992, 4, b'0', 'align: center;', 248),
(993, 1, b'1', '<ul>', 249),
(994, 2, b'0', '<ol>', 249),
(995, 3, b'0', '<li>', 249),
(996, 4, b'0', '<p>', 249),
(997, 1, b'1', '<!-- This is a comment -->', 250),
(998, 2, b'0', '// This is a comment', 250),
(999, 3, b'0', '/* This is a comment */', 250),
(1000, 4, b'0', '# This is a comment', 250),
(1001, 1, b'0', 'var', 251),
(1002, 2, b'0', 'let', 251),
(1003, 3, b'0', 'const', 251),
(1004, 4, b'1', 'all of the above', 251),
(1005, 1, b'0', '/* This is a comment */', 252),
(1006, 2, b'1', '// This is a comment', 252),
(1007, 3, b'0', '<!-- This is a comment -->', 252),
(1008, 4, b'0', '# This is a comment', 252),
(1009, 1, b'1', 'Plus', 253),
(1010, 2, b'0', 'Asterisk', 253),
(1011, 3, b'0', 'Slash', 253),
(1012, 4, b'0', 'Percent', 253),
(1013, 1, b'0', 'document.getElementByName(\"myElement\")', 254),
(1014, 2, b'1', 'document.getElementById(\"myElement\")', 254),
(1015, 3, b'0', 'document.querySelector(\"myElement\")', 254),
(1016, 4, b'0', 'document.getElementByClass(\"myElement\")', 254),
(1017, 1, b'0', 'To add styles to HTML elements', 255),
(1018, 2, b'0', 'To append new elements to the DOM', 255),
(1019, 3, b'1', 'To listen for and respond to events', 255),
(1020, 4, b'0', 'To create loops in JavaScript', 255),
(1021, 1, b'0', 'String', 256),
(1022, 2, b'0', 'Number', 256),
(1023, 3, b'0', 'Boolean', 256),
(1024, 4, b'1', 'Object', 256),
(1025, 1, b'0', 'parseInt(\"42\")', 257),
(1026, 2, b'0', 'parseFloat(\"42\")', 257),
(1027, 3, b'0', 'Number(\"42\")', 257),
(1028, 4, b'1', 'All of the above', 257),
(1029, 1, b'1', 'if (x === 5) { }', 258),
(1030, 2, b'0', 'if x = 5 { }', 258),
(1031, 3, b'0', 'if x === 5:', 258),
(1032, 4, b'0', 'if x == 5 then { }', 258),
(1033, 1, b'1', 'object', 259),
(1034, 2, b'0', 'array', 259),
(1035, 3, b'0', 'arrayobject', 259),
(1036, 4, b'0', 'undefined', 259),
(1037, 1, b'0', 'new Array()', 260),
(1038, 2, b'1', '[]', 260),
(1039, 3, b'0', 'array.create()', 260),
(1040, 4, b'0', 'Array.new()', 260),
(1041, 1, b'1', 'React', 261),
(1042, 2, b'0', 'Angular', 261),
(1043, 3, b'0', 'Vue.js', 261),
(1044, 4, b'0', 'Ember.js', 261),
(1045, 1, b'0', 'React', 262),
(1046, 2, b'1', 'Angular', 262),
(1047, 3, b'0', 'Vue.js', 262),
(1048, 4, b'0', 'Backbone.js', 262),
(1049, 1, b'1', 'React', 263),
(1050, 2, b'0', 'Angular', 263),
(1051, 3, b'0', 'Vue.js', 263),
(1052, 4, b'0', 'Polymer', 263),
(1053, 1, b'0', 'React', 264),
(1054, 2, b'0', 'Angular', 264),
(1055, 3, b'1', 'Vue.js', 264),
(1056, 4, b'0', 'Knockout.js', 264),
(1057, 1, b'0', 'React', 265),
(1058, 2, b'1', 'Angular', 265),
(1059, 3, b'0', 'Vue.js', 265),
(1060, 4, b'0', 'Svelte', 265),
(1061, 1, b'0', 'React', 266),
(1062, 2, b'0', 'Angular', 266),
(1063, 3, b'1', 'Vue.js', 266),
(1064, 4, b'0', 'Ember.js', 266),
(1065, 1, b'0', 'React', 267),
(1066, 2, b'1', 'Angular', 267),
(1067, 3, b'0', 'Vue.js', 267),
(1068, 4, b'0', 'Backbone.js', 267),
(1069, 1, b'1', 'React', 268),
(1070, 2, b'0', 'Angular', 268),
(1071, 3, b'0', 'Vue.js', 268),
(1072, 4, b'0', 'Meteor.js', 268),
(1073, 1, b'0', 'React', 269),
(1074, 2, b'1', 'Angular', 269),
(1075, 3, b'0', 'Vue.js', 269),
(1076, 4, b'0', 'Ember.js', 269),
(1077, 1, b'1', 'React', 270),
(1078, 2, b'0', 'Angular', 270),
(1079, 3, b'0', 'Vue.js', 270),
(1080, 4, b'0', 'Backbone.js', 270),
(1081, 1, b'1', 'Java', 271),
(1082, 2, b'0', 'JavaScript', 271),
(1083, 3, b'0', 'Python', 271),
(1084, 4, b'0', 'PHP', 271),
(1085, 1, b'0', 'GET', 272),
(1086, 2, b'1', 'POST', 272),
(1087, 3, b'0', 'PUT', 272),
(1088, 4, b'0', 'DELETE', 272),
(1089, 1, b'1', 'Application Programming Interface', 273),
(1090, 2, b'0', 'Advanced Programming Interface', 273),
(1091, 3, b'0', 'Access Point Interface', 273),
(1092, 4, b'0', 'Algorithmic Programming Interface', 273),
(1093, 1, b'1', 'Relational', 274),
(1094, 2, b'0', 'NoSQL', 274),
(1095, 3, b'0', 'XML', 274),
(1096, 4, b'0', 'JSON', 274),
(1097, 1, b'1', 'Representational State Transfer', 275),
(1098, 2, b'0', 'Remote Execution Service Toolkit', 275),
(1099, 3, b'0', 'Resource Enhancement and Security Techniques', 275),
(1100, 4, b'0', 'Responsive Enterprise Systems Technology', 275),
(1101, 1, b'0', 'Basic Authentication', 276),
(1102, 2, b'0', 'Digest Authentication', 276),
(1103, 3, b'1', 'Token-based Authentication', 276),
(1104, 4, b'0', 'OAuth', 276),
(1105, 1, b'1', '200', 277),
(1106, 2, b'0', '400', 277),
(1107, 3, b'0', '500', 277),
(1108, 4, b'0', '600', 277),
(1109, 1, b'0', 'Django', 278),
(1110, 2, b'1', 'Flask', 278),
(1111, 3, b'0', 'Express.js', 278),
(1112, 4, b'0', 'Ruby on Rails', 278),
(1113, 1, b'1', 'Converting data to a byte stream for storage or transmission', 279),
(1114, 2, b'0', 'Encrypting sensitive data before transmission', 279),
(1115, 3, b'0', 'Decoding data received from the client', 279),
(1116, 4, b'0', 'Transforming data into HTML for rendering in the browser', 279),
(1117, 1, b'1', 'Authorization', 280),
(1118, 2, b'0', 'User-Agent', 280),
(1119, 3, b'0', 'Content-Type', 280),
(1120, 4, b'0', 'Cache-Control', 280),
(1121, 1, b'0', 'To protect personal information', 281),
(1122, 2, b'1', 'To prevent cyber attacks', 281),
(1123, 3, b'0', 'To enforce strict security policies', 281),
(1124, 4, b'0', 'To enhance network performance', 281),
(1125, 1, b'0', 'Malware', 282),
(1126, 2, b'1', 'Phishing', 282),
(1127, 3, b'0', 'Denial of Service (DoS)', 282),
(1128, 4, b'0', 'Ransomware', 282),
(1129, 1, b'0', '123456', 283),
(1130, 2, b'0', 'password', 283),
(1131, 3, b'0', 'iloveyou', 283),
(1132, 4, b'1', 'X#5v$7Yz', 283),
(1133, 1, b'0', 'To encrypt data transmissions', 284),
(1134, 2, b'1', 'To block unauthorized access', 284),
(1135, 3, b'0', 'To perform regular software updates', 284),
(1136, 4, b'0', 'To improve network speed', 284),
(1137, 1, b'0', 'Providing maximum access rights to all users', 285),
(1138, 2, b'1', 'Restricting access rights based on user roles', 285),
(1139, 3, b'0', 'Sharing passwords for easier collaboration', 285),
(1140, 4, b'0', 'Granting administrator privileges to all users', 285),
(1141, 1, b'0', 'Antivirus software', 286),
(1142, 2, b'0', 'Intrusion Detection System (IDS)', 286),
(1143, 3, b'1', 'Biometric access control', 286),
(1144, 4, b'0', 'Firewall configuration', 286),
(1145, 1, b'0', 'To identify potential threats', 287),
(1146, 2, b'0', 'To authenticate user identities', 287);
INSERT INTO `answers` (`id`, `insertion_order`, `is_correct`, `name`, `question_id`) VALUES
(1147, 3, b'1', 'To protect data confidentiality', 287),
(1148, 4, b'0', 'To monitor network traffic', 287),
(1149, 1, b'0', 'Adware', 288),
(1150, 2, b'0', 'Spyware', 288),
(1151, 3, b'1', 'Ransomware', 288),
(1152, 4, b'0', 'Trojan horse', 288),
(1153, 1, b'0', 'Open them to investigate the content', 289),
(1154, 2, b'0', 'Forward them to a colleague for review', 289),
(1155, 3, b'1', 'Delete them without opening or clicking', 289),
(1156, 4, b'0', 'Disable antivirus before opening them', 289),
(1157, 1, b'0', 'To remove all software vulnerabilities', 290),
(1158, 2, b'0', 'To improve user interface design', 290),
(1159, 3, b'0', 'To increase system resource usage', 290),
(1160, 4, b'1', 'To fix security vulnerabilities', 290),
(1161, 1, b'1', 'To prevent unauthorized access to a network', 291),
(1162, 2, b'0', 'To encrypt data transmitted over the network', 291),
(1163, 3, b'0', 'To optimize network performance', 291),
(1164, 4, b'0', 'To provide antivirus protection', 291),
(1165, 1, b'0', 'Firewall', 292),
(1166, 2, b'0', 'VPN', 292),
(1167, 3, b'0', 'Antivirus software', 292),
(1168, 4, b'1', 'Snort', 292),
(1169, 1, b'1', 'Port forwarding', 293),
(1170, 2, b'0', 'Packet sniffing', 293),
(1171, 3, b'0', 'Malware scanning', 293),
(1172, 4, b'0', 'Traffic shaping', 293),
(1173, 1, b'1', 'To isolate critical systems from the internet', 294),
(1174, 2, b'0', 'To scan network traffic for malware', 294),
(1175, 3, b'0', 'To create secure virtual private networks (VPNs)', 294),
(1176, 4, b'0', 'To optimize network performance', 294),
(1177, 1, b'1', 'Network Address Translation (NAT)', 295),
(1178, 2, b'0', 'Virtual Private Network (VPN)', 295),
(1179, 3, b'0', 'Intrusion Prevention System (IPS)', 295),
(1180, 4, b'0', 'Data Loss Prevention (DLP)', 295),
(1181, 1, b'0', 'Buffer overflow', 296),
(1182, 2, b'0', 'Distributed Denial of Service (DDoS)', 296),
(1183, 3, b'0', 'Phishing attack', 296),
(1184, 4, b'1', 'Man-in-the-middle (MitM)', 296),
(1185, 1, b'0', 'FTP (File Transfer Protocol)', 297),
(1186, 2, b'0', 'HTTP (Hypertext Transfer Protocol)', 297),
(1187, 3, b'1', 'SSH (Secure Shell)', 297),
(1188, 4, b'0', 'SMTP (Simple Mail Transfer Protocol)', 297),
(1189, 1, b'1', 'To detect and respond to network threats in real-time', 298),
(1190, 2, b'0', 'To encrypt network traffic for secure communication', 298),
(1191, 3, b'0', 'To filter spam emails and malicious attachments', 298),
(1192, 4, b'0', 'To create secure VPN tunnels for remote access', 298),
(1193, 1, b'0', 'Using weak passwords', 299),
(1194, 2, b'0', 'Disabling automatic software updates', 299),
(1195, 3, b'1', 'Regularly backing up data', 299),
(1196, 4, b'0', 'Sharing login credentials with colleagues', 299),
(1197, 1, b'0', 'It inspects network traffic at the application layer.', 300),
(1198, 2, b'0', 'It only allows inbound traffic and blocks outbound traffic.', 300),
(1199, 3, b'1', 'It tracks the state of network connections and applies rules accordingly.', 300),
(1200, 4, b'0', 'It provides protection against physical attacks on network infrastructure.', 300),
(1201, 1, b'1', 'AES', 301),
(1202, 2, b'0', 'RSA', 301),
(1203, 3, b'0', 'DES', 301),
(1204, 4, b'0', 'MD5', 301),
(1205, 1, b'0', 'To encrypt data', 302),
(1206, 2, b'1', 'To ensure integrity of data', 302),
(1207, 3, b'0', 'To provide anonymity', 302),
(1208, 4, b'0', 'To establish secure communication channels', 302),
(1209, 1, b'1', 'RSA', 303),
(1210, 2, b'0', 'AES', 303),
(1211, 3, b'0', 'DES', 303),
(1212, 4, b'0', 'SHA-256', 303),
(1213, 1, b'0', 'POP', 304),
(1214, 2, b'0', 'IMAP', 304),
(1215, 3, b'0', 'SMTP', 304),
(1216, 4, b'1', 'S/MIME', 304),
(1217, 1, b'0', 'SHA-1', 305),
(1218, 2, b'0', 'MD5', 305),
(1219, 3, b'1', 'SHA-256', 305),
(1220, 4, b'0', 'AES', 305),
(1221, 1, b'1', 'HTTPS', 306),
(1222, 2, b'0', 'HTTP', 306),
(1223, 3, b'0', 'FTP', 306),
(1224, 4, b'0', 'Telnet', 306),
(1225, 1, b'0', 'SSL', 307),
(1226, 2, b'1', 'TLS', 307),
(1227, 3, b'0', 'SSH', 307),
(1228, 4, b'0', 'IPsec', 307),
(1229, 1, b'1', 'Brute force attack', 308),
(1230, 2, b'0', 'Man-in-the-middle attack', 308),
(1231, 3, b'0', 'Denial-of-service attack', 308),
(1232, 4, b'0', 'Phishing attack', 308),
(1233, 1, b'1', 'WPA', 309),
(1234, 2, b'0', 'SSL', 309),
(1235, 3, b'0', 'IPsec', 309),
(1236, 4, b'0', 'SSH', 309),
(1237, 1, b'1', 'HMAC', 310),
(1238, 2, b'0', 'Diffie-Hellman', 310),
(1239, 3, b'0', 'Blowfish', 310),
(1240, 4, b'0', 'RC4', 310),
(1241, 1, b'1', 'Cross-site scripting (XSS)', 311),
(1242, 2, b'0', 'SQL injection', 311),
(1243, 3, b'0', 'Cross-site request forgery (CSRF)', 311),
(1244, 4, b'0', 'Clickjacking', 311),
(1245, 1, b'0', 'X-XSS-Protection', 312),
(1246, 2, b'0', 'Content-Security-Policy', 312),
(1247, 3, b'1', 'X-Frame-Options', 312),
(1248, 4, b'0', 'Access-Control-Allow-Origin', 312),
(1249, 1, b'0', 'Preventing server-side code injection attacks', 313),
(1250, 2, b'1', 'Protecting against man-in-the-middle attacks', 313),
(1251, 3, b'0', 'Safeguarding against SQL injection attacks', 313),
(1252, 4, b'0', 'Mitigating against session hijacking attacks', 313),
(1253, 1, b'0', 'Cross-site request forgery (CSRF)', 314),
(1254, 2, b'0', 'Brute force attack', 314),
(1255, 3, b'1', 'Fuzzing', 314),
(1256, 4, b'0', 'Session hijacking', 314),
(1257, 1, b'0', 'Cross-site scripting (XSS)', 315),
(1258, 2, b'0', 'Cross-site request forgery (CSRF)', 315),
(1259, 3, b'0', 'Server-side request forgery (SSRF)', 315),
(1260, 4, b'1', 'SQL injection', 315),
(1261, 1, b'0', 'Gaining unauthorized access to the web server', 316),
(1262, 2, b'0', 'Obtaining sensitive information from the database', 316),
(1263, 3, b'1', 'Elevating user privileges within the application', 316),
(1264, 4, b'0', 'Disrupting the availability of the web application', 316),
(1265, 1, b'0', 'Encryption', 317),
(1266, 2, b'1', 'Hashing', 317),
(1267, 3, b'0', 'Salting', 317),
(1268, 4, b'0', 'Obfuscation', 317),
(1269, 1, b'0', 'OAuth', 318),
(1270, 2, b'0', 'SSL/TLS encryption', 318),
(1271, 3, b'0', 'CAPTCHA', 318),
(1272, 4, b'1', 'Session tokens', 318),
(1273, 1, b'0', 'Preventing clickjacking attacks', 319),
(1274, 2, b'0', 'Protecting against XSS vulnerabilities', 319),
(1275, 3, b'1', 'Disallowing web crawlers from accessing certain areas of the application', 319),
(1276, 4, b'0', 'Mitigating against SQL injection attacks', 319),
(1277, 1, b'0', 'Implementing multi-factor authentication (MFA)', 320),
(1278, 2, b'0', 'Using secure coding practices', 320),
(1279, 3, b'0', 'Validating and sanitizing user input', 320),
(1280, 4, b'1', 'Implementing anti-CSRF tokens', 320);

-- --------------------------------------------------------

--
-- Table structure for table `progresses`
--

DROP TABLE IF EXISTS `progresses`;
CREATE TABLE IF NOT EXISTS `progresses` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `attempts` int DEFAULT NULL,
  `current_question` int DEFAULT NULL,
  `score` int DEFAULT NULL,
  `test_id` bigint DEFAULT NULL,
  `user_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKe0cr4eo0o0rx65hxad6c8nww9` (`test_id`),
  KEY `FK35ar6a1hyt1ggp3kyonrqn7p4` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- --------------------------------------------------------

--
-- Table structure for table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE IF NOT EXISTS `questions` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `test_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKoc6xkgj16nhyyes4ath9dyxxw` (`test_id`)
) ENGINE=InnoDB AUTO_INCREMENT=321 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`id`, `name`, `test_id`) VALUES
(1, 'Which of the following is not a programming language?', 1),
(2, 'What is the purpose of a programming language syntax?', 1),
(3, 'Which programming language is known for its simplicity and readability?', 1),
(4, 'Which symbol is used to indicate the end of a statement in many programming languages?', 1),
(5, 'What does the term \"variable\" refer to in programming?', 1),
(6, 'Which of the following is an example of a high-level programming language?', 1),
(7, 'What does the term \"syntax error\" refer to in programming?', 1),
(8, 'Which programming construct is used to repeat a block of code until a certain condition is met?', 1),
(9, 'Which programming language is often used for web development?', 1),
(10, 'What does the term \"debugging\" refer to in programming?', 1),
(11, 'Which of the following is not a principle of object-oriented programming?', 2),
(12, 'Which term describes the process of creating a new instance of a class?', 2),
(13, 'What does the term \"encapsulation\" refer to in object-oriented programming?', 2),
(14, 'Which of the following is an example of inheritance?', 2),
(15, 'What is the main advantage of using polymorphism in object-oriented programming?', 2),
(16, 'Which of the following statements about interfaces in object-oriented programming is true?', 2),
(17, 'What is the purpose of the \"super\" keyword in object-oriented programming?', 2),
(18, 'What does the term \"method overloading\" mean in object-oriented programming?', 2),
(19, 'Which of the following is an example of composition in object-oriented programming?', 2),
(20, 'What is the purpose of the \"this\" keyword in object-oriented programming?', 2),
(21, 'What is a key characteristic of functional programming?', 3),
(22, 'Which of the following is a higher-order function?', 3),
(23, 'What is referential transparency in functional programming?', 3),
(24, 'Which of the following is a pure function?', 3),
(25, 'What is the concept of currying in functional programming?', 3),
(26, 'What does the term \"immutability\" mean in functional programming?', 3),
(27, 'What is a pure function in functional programming?', 3),
(28, 'What is the purpose of recursion in functional programming?', 3),
(29, 'What is the difference between a pure function and an impure function in functional programming?', 3),
(30, 'What is the benefit of using higher-order functions in functional programming?', 3),
(31, 'Which programming language is known for its strong support for metaprogramming?', 4),
(32, 'What is the purpose of metaprogramming in programming languages?', 4),
(33, 'Which of the following is an example of a concurrent programming model?', 4),
(34, 'What is the main goal of concurrent programming?', 4),
(35, 'Which programming language introduced the concept of \"Futures\" for parallel programming?', 4),
(36, 'What does the term \"deadlock\" refer to in concurrent programming?', 4),
(37, 'Which programming language supports parallel programming with \"async\" and \"await\"?', 4),
(38, 'What is the difference between parallelism and concurrency in programming?', 4),
(39, 'Which of the following is an example of a lock-free synchronization mechanism?', 4),
(40, 'What is the purpose of a transactional memory in concurrent programming?', 4),
(41, 'Which data structure follows the Last-In-First-Out (LIFO) principle?', 5),
(42, 'Which data structure allows efficient insertion and deletion at both ends?', 5),
(43, 'Which data structure follows the First-In-First-Out (FIFO) principle?', 5),
(44, 'Which data structure provides constant-time access to elements based on their index?', 5),
(45, 'Which data structure is used to implement recursion?', 5),
(46, 'Which data structure is suitable for implementing a reverse operation efficiently?', 5),
(47, 'Which data structure is commonly used to implement a breadth-first search (BFS) algorithm?', 5),
(48, 'Which data structure can efficiently perform insertion and deletion operations in constant time?', 5),
(49, 'Which data structure allows random access to elements?', 5),
(50, 'Which data structure is based on a hierarchical arrangement of elements?', 5),
(51, 'Which of the following data structures is not commonly used to represent a tree?', 6),
(52, 'What is the maximum number of edges in an undirected graph with n vertices?', 6),
(53, 'Which traversal algorithm visits the nodes of a binary tree in ascending order?', 6),
(54, 'In a binary search tree, what is the maximum number of nodes in the left subtree of any node?', 6),
(55, 'Which of the following is not a graph traversal algorithm?', 6),
(56, 'Which of the following statements about a spanning tree is true?', 6),
(57, 'Which of the following data structures is used to implement breadth-first search (BFS)?', 6),
(58, 'What is the time complexity of inserting a node into a binary search tree (BST) with n nodes in the worst case?', 6),
(59, 'What algorithm finds shortest path in a weighted graph with non-negative edge weights?', 6),
(60, 'In a directed graph, a topological sort is only possible if the graph is:', 6),
(61, 'Which data structure is best suited for implementing a priority queue?', 7),
(62, 'Which data structure provides constant-time average-case lookup and insertion operations?', 7),
(63, 'In a binary search tree, which traversal algorithm visits the nodes in ascending order?', 7),
(64, 'Which data structure uses separate chaining to handle collisions?', 7),
(65, 'What is the worst-case time complexity for searching an element in a balanced binary search tree?', 7),
(66, 'Which data structure is based on the \"first in, first out\" (FIFO) principle?', 7),
(67, 'Which data structure is used to efficiently find the nearest smaller or larger element for a given key?', 7),
(68, 'Which data structure maintains a sorted collection with dynamic insertions and deletions?', 7),
(69, 'Which data structure provides constant-time insertion and deletion operations at both ends?', 7),
(70, 'Which data structure ensures min and max elements at the root and leaves, respectively?', 7),
(71, 'Which of the following best describes dynamic programming?', 8),
(72, 'What is the main advantage of using dynamic programming?', 8),
(73, 'In dynamic programming, what is memoization?', 8),
(74, 'Which of the following problems can be efficiently solved using dynamic programming?', 8),
(75, 'What is the time complexity of a dynamic programming solution with memoization?', 8),
(76, 'Which of the following is not a characteristic of dynamic programming?', 8),
(77, 'In dynamic programming, what is the purpose of solving subproblems?', 8),
(78, 'What is the difference between top-down and bottom-up approaches in dynamic programming?', 8),
(79, 'Which data structure is commonly used for memoization in dynamic programming?', 8),
(80, 'Which of the following statements is true regarding the relationship between dynamic programming and recursion?', 8),
(81, 'Which of the following is not a characteristic of an algorithm?', 9),
(82, 'What is the time complexity of a linear search algorithm?', 9),
(83, 'Which sorting algorithm has a worst-case time complexity of O(n^2)?', 9),
(84, 'What is the purpose of the Big O notation in algorithm analysis?', 9),
(85, 'Which data structure follows the Last-In-First-Out (LIFO) principle?', 9),
(86, 'What is the worst-case time complexity of the Binary Search algorithm?', 9),
(87, 'Which algorithm is used to find the shortest path in a weighted graph?', 9),
(88, 'Which data structure provides constant-time insertion and deletion at both ends?', 9),
(89, 'Which algorithm is commonly used for sorting elements in an array with a small range of values?', 9),
(90, 'What is the best-case time complexity of Bubble Sort?', 9),
(91, 'Which sorting algorithm has the worst-case time complexity of O(n^2)?', 10),
(92, 'Which sorting algorithm guarantees a worst-case time complexity of O(n log n)?', 10),
(93, 'Which searching algorithm is based on the principle of divide and conquer?', 10),
(94, 'Which searching algorithm is most suitable for searching in a sorted and uniformly distributed array?', 10),
(95, 'Which sorting algorithm has the best average-case time complexity?', 10),
(96, 'Which sorting algorithm is an in-place sorting algorithm?', 10),
(97, 'Which sorting algorithm is based on the concept of a pivot element?', 10),
(98, 'Which searching algorithm works only on sorted arrays?', 10),
(99, 'Which sorting algorithm has the worst-case time complexity of O(n log n)?', 10),
(100, 'Which searching algorithm has the time complexity of O(1) in the best-case scenario?', 10),
(101, 'Which algorithm is used to find the shortest path between two vertices in a graph?', 11),
(102, 'Which algorithm is used to detect cycles in a directed graph?', 11),
(103, 'Which algorithm guarantees the shortest path in a weighted graph with negative edge weights?', 11),
(104, 'Which algorithm is used to find the minimum spanning tree in a weighted graph?', 11),
(105, 'Which algorithm can be used to find the topological order of a directed acyclic graph (DAG)?', 11),
(106, 'Which algorithm is used to find the strongly connected components in a directed graph?', 11),
(107, 'Which algorithm is used to find the maximum flow in a flow network?', 11),
(108, 'Which algorithm is used to determine the shortest paths between all pairs of vertices in a graph?', 11),
(109, 'Which algorithm is used to find the articulation points in an undirected graph?', 11),
(110, 'Which algorithm is used to find the minimum cut in a flow network?', 11),
(111, 'Which algorithmic paradigm makes locally optimal choices at each step?', 12),
(112, 'Which technique breaks down a problem into smaller subproblems and combines their solutions?', 12),
(113, 'In which scenario does the greedy algorithm guarantee an optimal solution?', 12),
(114, 'Which technique involves recursive decision-making and backtracking?', 12),
(115, 'Which technique solves problems with overlapping subproblems and stores their solutions for efficiency?', 12),
(116, 'What technique solves the traveling salesman problem?', 12),
(117, 'Which paradigm finds approximate solutions by iterative improvement?', 12),
(118, 'What technique efficiently finds the shortest path in a graph with non-negative edge weights?', 12),
(119, 'Which paradigm makes a sequence of choices to minimize or maximize an objective function?', 12),
(120, 'Which technique efficiently finds the maximum sum subarray in a given array?', 12),
(121, 'What is the primary function of the Internet Protocol (IP)?', 13),
(122, 'Which network layer is responsible for logical addressing and routing?', 13),
(123, 'What protocol is commonly used for email communication?', 13),
(124, 'Which of the following devices is used to connect multiple computers within a local area network (LAN)?', 13),
(125, 'What is the purpose of a subnet mask in IP networking?', 13),
(126, 'Which protocol is used for secure transmission of web pages?', 13),
(127, 'What is the maximum data transfer rate of an Ethernet connection commonly used in local area networks?', 13),
(128, 'What is the purpose of a default gateway in a TCP/IP network?', 13),
(129, 'Which network protocol is used for securely accessing a remote server\'s command-line interface?', 13),
(130, 'What is the purpose of DNS (Domain Name System)?', 13),
(131, 'Which routing protocol uses the distance-vector algorithm to determine the best path for packet forwarding?', 14),
(132, 'Which switching technique allows multiple devices to share the same network segment?', 14),
(133, 'Which of the following is a link-state routing protocol?', 14),
(134, 'Which layer of the OSI model is responsible for logical addressing and routing?', 14),
(135, 'What is the purpose of a default gateway in a network?', 14),
(136, 'Which command is used to view the routing table in a Cisco router?', 14),
(137, 'Which switching technology provides dedicated bandwidth for each network device?', 14),
(138, 'Which protocol is commonly used to automatically assign IP addresses to network devices?', 14),
(139, 'Which command is used to configure a default gateway on a Cisco switch?', 14),
(140, 'Which routing protocol is classless and supports variable-length subnet masks?', 14),
(141, 'Which of the following is an example of a symmetric encryption algorithm?', 15),
(142, 'What is the purpose of a firewall in network security?', 15),
(143, 'Which of the following protocols provides secure communication over the Internet?', 15),
(144, 'What is the main advantage of using a virtual private network (VPN)?', 15),
(145, 'What does the acronym SSL stand for in the context of network security?', 15),
(146, 'Which of the following is a commonly used cryptographic hash function?', 15),
(147, 'Which type of attack involves an attacker intercepting and modifying communication between two parties?', 15),
(148, 'What is the purpose of a digital certificate in network security?', 15),
(149, 'Which of the following is an example of a strong password?', 15),
(150, 'Which layer of the OSI model is responsible for encrypting and decrypting data?', 15),
(151, 'What is the most common cause of network latency?', 16),
(152, 'Which network component is responsible for translating domain names into IP addresses?', 16),
(153, 'Which protocol is commonly used for secure remote access to a network?', 16),
(154, 'What does the term \"MTU\" stand for in networking?', 16),
(155, 'Which tool can be used to capture and analyze network traffic?', 16),
(156, 'What is the purpose of Quality of Service (QoS) in networking?', 16),
(157, 'What is the default subnet mask for a Class C IP address?', 16),
(158, 'Which network troubleshooting command is used to test network connectivity between two devices?', 16),
(159, 'Which type of network attack floods a network with excessive traffic to disrupt its normal operation?', 16),
(160, 'What is the purpose of a VPN (Virtual Private Network) in networking?', 16),
(161, 'What is the primary goal of artificial intelligence?', 17),
(162, 'Which algorithm is commonly used for searching in AI?', 17),
(163, 'Which of the following represents knowledge in a rule-based AI system?', 17),
(164, 'What is the main advantage of using an expert system in AI?', 17),
(165, 'Which of the following is an example of a supervised learning algorithm?', 17),
(166, 'What is the Turing Test?', 17),
(167, 'Which of the following is an example of a natural language processing task?', 17),
(168, 'What is the purpose of the exploration-exploitation trade-off in AI?', 17),
(169, 'Which of the following is an example of a strong AI?', 17),
(170, 'What is the role of reinforcement learning in AI?', 17),
(171, 'Which type of machine learning algorithm requires labeled training data?', 18),
(172, 'Which machine learning algorithm is used for classification tasks?', 18),
(173, 'What is the main goal of unsupervised learning?', 18),
(174, 'Which algorithm is commonly used for dimensionality reduction in machine learning?', 18),
(175, 'Which of the following is an example of a supervised learning algorithm?', 18),
(176, 'Which machine learning algorithm is used to group similar data points together?', 18),
(177, 'What is the purpose of a validation set in machine learning?', 18),
(178, 'Which algorithm is used for both regression and classification tasks?', 18),
(179, 'Which machine learning technique is used to handle missing data?', 18),
(180, 'Which algorithm uses an ensemble of weak classifiers to make predictions?', 18),
(181, 'Which technique is commonly used for sentiment analysis in Natural Language Processing (NLP)?', 19),
(182, 'What is the main goal of text classification algorithms in NLP?', 19),
(183, 'Which technique is commonly used to preprocess text data in NLP?', 19),
(184, 'Which algorithm is commonly used for named entity recognition in NLP?', 19),
(185, 'What is the purpose of stemming in NLP?', 19),
(186, 'Which evaluation metric is commonly used to assess the performance of text classification algorithms?', 19),
(187, 'Which technique is commonly used to handle the problem of class imbalance in text classification?', 19),
(188, 'Which algorithm is commonly used for topic modeling in NLP?', 19),
(189, 'Which method is commonly used to represent words as numerical vectors in NLP?', 19),
(190, 'Which technique is commonly used for feature selection in NLP?', 19),
(191, 'Which activation function is commonly used in deep learning to introduce non-linearity?', 20),
(192, 'What is the purpose of dropout regularization in neural networks?', 20),
(193, 'Which layer is responsible for reducing the spatial dimensions of the input in a convolutional neural network?', 20),
(194, 'What is the purpose of the Adam optimizer in deep learning?', 20),
(195, 'What is the main advantage of using long short-term memory (LSTM) networks in recurrent neural networks?', 20),
(196, 'Which technique is used to address the vanishing gradient problem in recurrent neural networks?', 20),
(197, 'Which loss function is commonly used in binary classification tasks?', 20),
(198, 'What is the purpose of the backpropagation algorithm in training neural networks?', 20),
(199, 'Which layer is responsible for capturing temporal dependencies in a recurrent neural network?', 20),
(200, 'Which deep learning architecture is commonly used for image classification tasks?', 20),
(201, 'Which of the following is a characteristic of a relational database?', 21),
(202, 'What is the purpose of normalization in database design?', 21),
(203, 'Which SQL keyword is used to retrieve data from a database?', 21),
(204, 'Which SQL clause is used to filter records in a SELECT statement?', 21),
(205, 'In a relational database, a primary key is used to:', 21),
(206, 'Which of the following is a data manipulation language (DML) command in SQL?', 21),
(207, 'Which normal form ensures attribute dependency only on the primary key?', 21),
(208, 'Which SQL keyword is used to add data to a database?', 21),
(209, 'Which JOIN type returns only the common records between two tables?', 21),
(210, 'What is the purpose of an index in a database?', 21),
(211, 'Which of the following represents a relationship in an ER model?', 22),
(212, 'Which normalization form ensures that every non-key attribute depends on the entire primary key?', 22),
(213, 'Which of the following is used to represent a one-to-many relationship in an ER diagram?', 22),
(214, 'What is the purpose of indexing in a database?', 22),
(215, 'Which of the following SQL statements is used to add a new table to a database?', 22),
(216, 'Which type of relationship requires the presence of a linking table in a database?', 22),
(217, 'In the context of database design, what does the term \"denormalization\" refer to?', 22),
(218, 'Which of the following is an example of a data manipulation language (DML) statement?', 22),
(219, 'What does the acronym \"ACID\" stand for in the context of database transactions?', 22),
(220, 'Which of the following is a primary key constraint in a relational database?', 22),
(221, 'Which SQL keyword combines rows from multiple tables based on a related column?', 23),
(222, 'Which indexing strategy enables faster data retrieval by storing a subset of table columns?', 23),
(223, 'Which of the following SQL clauses is used to filter rows in a query based on a specified condition?', 23),
(224, 'Which SQL statement is used to insert new data into a table?', 23),
(225, 'Which type of join returns only the rows that have matching values in both tables being joined?', 23),
(226, 'Which indexing strategy is recommended for columns that have a low cardinality (few distinct values)?', 23),
(227, 'Which SQL clause is used to sort the result set in ascending or descending order?', 23),
(228, 'Which technique optimizes SQL queries by precomputing and storing expensive calculation results?', 23),
(229, 'Which SQL function is used to return the maximum value from a specified column?', 23),
(230, 'What technique is used to optimize SQL query performance by examining execution plans?', 23),
(231, 'Which of the following is not a characteristic of NoSQL databases?', 24),
(232, 'Which data model is commonly used in NoSQL databases for handling hierarchical data?', 24),
(233, 'Which NoSQL database is specifically designed for handling large-scale distributed data processing?', 24),
(234, 'Which big data technology is commonly used for batch processing and large-scale data analysis?', 24),
(235, 'Which of the following is a characteristic of CAP theorem for distributed systems?', 24),
(236, 'Which NoSQL database is based on the column-family data model?', 24),
(237, 'Which big data technology is commonly used for real-time stream processing?', 24),
(238, 'Which NoSQL database is known for its in-memory caching capabilities?', 24),
(239, 'Which big data technology is commonly used for distributed search and analytics?', 24),
(240, 'Which data model is commonly used in NoSQL databases for handling semi-structured data?', 24),
(241, 'Which HTML tag is used to define a hyperlink?', 25),
(242, 'How can you apply inline CSS to an HTML element?', 25),
(243, 'Which CSS property is used to change the text color of an element?', 25),
(244, 'What is the correct way to add an external CSS file to an HTML document?', 25),
(245, 'Which CSS property is used to create spacing between elements?', 25),
(246, 'Which HTML tag is used to define the main heading of a webpage?', 25),
(247, 'What is the correct way to add an image to an HTML document?', 25),
(248, 'How can you center an element horizontally using CSS?', 25),
(249, 'Which HTML tag is used to create an unordered list?', 25),
(250, 'How can you add comments in HTML?', 25),
(251, 'Which keyword is used to declare a variable in JavaScript?', 26),
(252, 'Which of the following is the correct way to comment a single line in JavaScript?', 26),
(253, 'Which of the following operators is used for concatenation in JavaScript?', 26),
(254, 'How do you select an HTML element with the id \"myElement\" using JavaScript?', 26),
(255, 'What is the purpose of the \'addEventListener\' method in JavaScript?', 26),
(256, 'Which of the following is not a valid JavaScript data type?', 26),
(257, 'How can you convert a string to an integer in JavaScript?', 26),
(258, 'What is the correct way to write an if statement in JavaScript?', 26),
(259, 'What does the typeof operator return for an array?', 26),
(260, 'How do you create a new array in JavaScript?', 26),
(261, 'Which front-end framework is known for its component-based architecture?', 27),
(262, 'Which front-end framework uses a two-way data binding approach?', 27),
(263, 'Which front-end framework uses a virtual DOM for efficient updates?', 27),
(264, 'Which front-end framework provides an out-of-the-box solution for state management?', 27),
(265, 'Which front-end framework is developed and maintained by Google?', 27),
(266, 'Which front-end framework uses a template syntax based on HTML?', 27),
(267, 'Which front-end framework has a command-line interface (CLI) for project setup and development?', 27),
(268, 'Which front-end framework is commonly used for building single-page applications (SPAs)?', 27),
(269, 'Which front-end framework allows the usage of TypeScript as a programming language?', 27),
(270, 'Which front-end framework provides built-in routing capabilities for client-side navigation?', 27),
(271, 'Which programming language is commonly used for server-side development?', 28),
(272, 'Which HTTP method is typically used to create a new resource on the server?', 28),
(273, 'What does the term \"API\" stand for in the context of server-side development?', 28),
(274, 'Which database type is commonly used for data persistence in server-side development?', 28),
(275, 'What does REST stand for in the context of web services?', 28),
(276, 'Which authentication method involves sending a token with each request to the server?', 28),
(277, 'Which HTTP status code indicates a successful request in server-side development?', 28),
(278, 'Which server-side framework is commonly used for building web APIs in Python?', 28),
(279, 'What does the term \"serialization\" mean in the context of server-side development?', 28),
(280, 'Which HTTP header is commonly used for sending API authentication credentials?', 28),
(281, 'What is the primary goal of cybersecurity?', 29),
(282, 'What is a common type of cyber threat that involves tricking users into revealing sensitive information?', 29),
(283, 'Which of the following is an example of a strong password?', 29),
(284, 'What is the purpose of a firewall in cybersecurity?', 29),
(285, 'What is the concept of \"least privilege\" in cybersecurity?', 29),
(286, 'Which of the following is an example of a physical security control?', 29),
(287, 'What is the purpose of encryption in cybersecurity?', 29),
(288, 'What is the term for malicious software that encrypts files and demands a ransom for their release?', 29),
(289, 'What is the best practice for handling suspicious email attachments or links?', 29),
(290, 'What is the purpose of regular software patching and updates?', 29),
(291, 'What is the primary purpose of a firewall in network security?', 30),
(292, 'Which of the following is an example of an intrusion detection system (IDS)?', 30),
(293, 'Which of the following is a common firewall configuration method?', 30),
(294, 'What is the purpose of a DMZ (Demilitarized Zone) in network security?', 30),
(295, 'Which network security measure is used to hide internal IP addresses from external networks?', 30),
(296, 'Which of the following is a common vulnerability that can be exploited to bypass a firewall?', 30),
(297, 'Which protocol is commonly used for secure remote access to a network?', 30),
(298, 'What is the purpose of an intrusion prevention system (IPS) in network security?', 30),
(299, 'Which of the following is an example of a network security best practice?', 30),
(300, 'Which of the following is a characteristic of a stateful firewall?', 30),
(301, 'Which encryption algorithm is commonly used for secure communication on the internet?', 31),
(302, 'What is the purpose of a digital signature in cryptography?', 31),
(303, 'Which encryption algorithm is based on the factorization of large prime numbers?', 31),
(304, 'Which protocol is commonly used for secure email communication?', 31),
(305, 'Which cryptographic hash function is commonly used to verify the integrity of downloaded files?', 31),
(306, 'Which protocol enables secure internet communication by encrypting data between two parties?', 31),
(307, 'Which key exchange protocol is commonly used for secure client-server sessions?', 31),
(308, 'What type of attack involves trying all possible combinations to decrypt encrypted data?', 31),
(309, 'Which encryption algorithm is widely used for securing wireless network connections?', 31),
(310, 'Which cryptographic algorithm is used to create a unique digital fingerprint of a file or message?', 31),
(311, 'What is a common vulnerability that allows attackers to execute arbitrary code on a web application?', 32),
(312, 'Which of the following HTTP response headers can help mitigate against clickjacking attacks?', 32),
(313, 'What is the purpose of a security-focused HTTP header called \"Strict-Transport-Security\" (HSTS)?', 32),
(314, 'What technique tests web application vulnerabilities through multiple requests with varied input values?', 32),
(315, 'What vulnerability results from improper input validation/sanitization before executing a database query?', 32),
(316, 'What is the primary goal of privilege escalation during a web application penetration test?', 32),
(317, 'Which technique can be used to protect sensitive information, such as passwords, stored in a database?', 32),
(318, 'Which security mechanism is commonly used to protect user sessions against session hijacking attacks?', 32),
(319, 'What is the purpose of a \"robots.txt\" file in the context of web application security?', 32),
(320, 'Which of the following is an effective countermeasure against cross-site request forgery (CSRF) attacks?', 32);

-- --------------------------------------------------------

--
-- Table structure for table `results`
--

DROP TABLE IF EXISTS `results`;
CREATE TABLE IF NOT EXISTS `results` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `date` date DEFAULT NULL,
  `score` int DEFAULT NULL,
  `test_id` bigint DEFAULT NULL,
  `user_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKe9uvk96os1lxpp8pf93p13lmv` (`test_id`),
  KEY `FKxtl9ahma532if6r68yvgo7ck` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- --------------------------------------------------------

--
-- Table structure for table `roles`
--

DROP TABLE IF EXISTS `roles`;
CREATE TABLE IF NOT EXISTS `roles` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `roles`
--

INSERT INTO `roles` (`id`, `name`) VALUES
(1, 'ROLE_ADMIN'),
(2, 'ROLE_USER');

-- --------------------------------------------------------

--
-- Table structure for table `tests`
--

DROP TABLE IF EXISTS `tests`;
CREATE TABLE IF NOT EXISTS `tests` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `description` varchar(255) DEFAULT NULL,
  `difficulty` enum('Easy','Hard','Medium') DEFAULT NULL,
  `image` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `theme_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKkv4pwynoh1njfdx64nss9i5h0` (`theme_id`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `tests`
--

INSERT INTO `tests` (`id`, `description`, `difficulty`, `image`, `name`, `theme_id`) VALUES
(1, 'This test assesses your knowledge of programming language concepts, syntax, and basic programming constructs.', 'Easy', '3be5174c-e5e1-4c33-8abe-4da6f3410c12.png', 'Fundamentals of Programming Languages', 1),
(2, 'This test evaluates your understanding of object-oriented programming principles and their practical application.', 'Medium', '043e3bd3-c849-4ea6-b83e-038038511361.png', 'Object-Oriented Programming in Practice', 1),
(3, 'This test focuses on functional programming paradigms, higher-order functions, and immutability.', 'Medium', '46d88491-ac59-40cb-8b44-a029c4713d4a.png', 'Functional Programming Concepts', 1),
(4, 'This test covers advanced concepts like metaprogramming, concurrency, and parallelism in programming languages.', 'Hard', 'a0a9c85f-d5ec-4320-881f-e4fd91c68a1e.png', 'Advanced Topics in Programming Languages', 1),
(5, 'This test examines your knowledge of fundamental data structures such as arrays, linked lists, stacks, and queues.', 'Easy', 'ec1f3cd9-68fe-416a-8add-9f980bf7b622.PNG', 'Essential Data Structures and Algorithms', 2),
(6, 'This test evaluates your understanding of tree-based data structures, graph traversal algorithms, and related concepts.', 'Medium', '782284f4-8be5-47b5-bf77-22e3b403a860.png', 'Trees and Graphs: Algorithms and Traversals', 2),
(7, 'This test focuses on advanced data structures like heaps, hash tables, and balanced search trees.', 'Medium', '9d617d62-fb00-48ca-b0e0-e069b5777571.png', 'Advanced Data Structures and Applications', 2),
(8, 'This test assesses your proficiency in solving problems using dynamic programming techniques and memoization.', 'Hard', '18d65323-5b43-4253-becb-2d514d01b3c3.png', 'Dynamic Programming and Advanced Algorithms', 2),
(9, 'This test covers the basics of algorithm design, analysis, and complexity theory.', 'Easy', '9a255b45-3a92-4016-be5e-0c35d3b67fe9.png', 'Introduction to Algorithms and Analysis', 3),
(10, 'This test examines your knowledge of various sorting and searching algorithms and their efficiency.', 'Medium', 'be180cb7-67b5-49c9-8361-d3dd47958eca.png', 'Sorting and Searching Algorithms', 3),
(11, 'This test focuses on algorithms related to graphs, such as shortest path algorithms and graph traversals.', 'Medium', '97473657-a55f-4988-90cb-e2e285b88750.png', 'Graph Algorithms: Traversals and Shortest', 3),
(12, 'This test challenges your understanding of advanced algorithmic paradigms like greedy algorithms and divide-and-conquer.', 'Hard', '50f087bc-89ac-4e31-a667-906e22db3869.png', 'Advanced Algorithmic Techniques', 3),
(13, 'This test assesses your knowledge of basic networking concepts, protocols, and network layers.', 'Easy', '38eed6c0-eeda-4ebe-86a4-e6b4c8f53995.png', 'Fundamentals of Computer Networking', 4),
(14, 'This test evaluates your understanding of routing protocols, switching techniques, and network configuration.', 'Medium', 'cea66880-0e3c-47b3-b804-928eef48dc32.png', 'Routing and Switching: Configuration and Protocols', 4),
(15, 'This test focuses on network security principles, encryption algorithms, and secure communication protocols.', 'Medium', '2ee3b7fc-bfc7-4738-9952-0908ff562fe9.png', 'Network Security: Principles and Practices', 4),
(16, 'This test challenges your skills in diagnosing network issues, optimizing network performance, and analyzing network traffic.', 'Hard', '1ff19e36-68a2-4052-adda-8c4897ba39c9.png', 'Network Optimization and Troubleshooting', 4),
(17, 'This test covers the basics of AI, including search algorithms, knowledge representation, and intelligent agents.', 'Easy', 'ebd9e320-7c3e-448f-b794-f2b469660504.png', 'Introduction to Artificial Intelligence', 5),
(18, 'This test evaluates your understanding of supervised learning, unsupervised learning, and basic machine learning algorithms.', 'Medium', 'a3d9eef4-740c-478a-802a-a706eec86e0d.png', 'Machine Learning: Algorithms and Techniques', 5),
(19, 'This test focuses on language processing techniques, sentiment analysis, and text classification algorithms.', 'Medium', 'ceaf5287-1a09-49fd-a6ab-341a078117c9.png', 'Natural Language Processing Techniques', 5),
(20, 'This test challenges your knowledge of deep learning architectures, convolutional neural networks, and recurrent neural networks.', 'Hard', '31190e39-a1cd-4f8d-bf22-cab2916a321f.png', 'Deep Learning and Neural Networks', 5),
(21, 'This test assesses your understanding of relational database models, SQL queries, and normalization techniques.', 'Easy', '8b778707-7be6-42ec-92e6-914e390fec7d.png', 'Relational Database Concepts and Fundamentals', 6),
(22, 'This test evaluates your skills in designing databases, entity-relationship modeling, and schema optimization.', 'Medium', '81652ff8-173a-4ed5-a776-1ab1c603af09.png', 'Database Design and ER Modeling', 6),
(23, 'This test focuses on advanced SQL queries, indexing strategies, and query optimization techniques.', 'Medium', '57067cfa-5af5-4787-a041-15d9f835ea20.png', 'Advanced SQL and Query Optimization', 6),
(24, 'This test challenges your knowledge of NoSQL databases, distributed data processing, and big data technologies.', 'Hard', '82ae79ca-0ed9-498c-98b3-5aaec167ff8a.png', 'NoSQL Databases and Big Data Management', 6),
(25, 'This test covers the fundamentals of HTML markup, CSS styling, and web page layout techniques.', 'Easy', '4f090c27-7665-4003-b22a-bc030a2229d5.png', 'HTML and CSS Basics and Fundamentals', 7),
(26, 'This test evaluates your understanding of JavaScript syntax, DOM manipulation, and basic programming concepts.', 'Medium', 'c4d1e156-c160-46b3-b911-10a229f8726a.png', 'JavaScript Basics and Fundamentals', 7),
(27, 'This test focuses on popular front-end frameworks like React, Angular, or Vue.js and their usage in building web applications.', 'Medium', '3710d307-2613-44f7-8188-0dce24c99b9d.png', 'Front-End Frameworks and Libraries', 7),
(28, 'This test challenges your skills in server-side programming, working with APIs, and handling data persistence.', 'Hard', 'd6817759-a9bc-4ee3-804f-20e3356e92bb.png', 'Server-Side Development and APIs', 7),
(29, 'This test assesses your knowledge of basic cybersecurity concepts, threats, and security principles.', 'Easy', '6f6b67f6-fc6d-4ac3-9cd3-2eae0681fb9b.png', 'Introduction to Cybersecurity Principles', 8),
(30, 'This test evaluates your understanding of network security measures, firewall configuration, and intrusion detection.', 'Medium', '18d3227b-7ea9-49d8-8af1-09810995dc77.png', 'Network Security and Firewall Management', 8),
(31, 'This test focuses on cryptographic algorithms, encryption protocols, and secure communication channels.', 'Medium', '7d2d2971-703e-48e1-b8dc-b656a7db891e.png', 'Cryptography and Secure Communications', 8),
(32, 'This test assesses your skills in identifying vulnerabilities, conducting penetration tests, and securing web applications.', 'Hard', '52733e9a-02cd-4ca9-b04e-7637efc90a90.png', 'Web Application Security and Penetration Testing', 8);

-- --------------------------------------------------------

--
-- Table structure for table `themes`
--

DROP TABLE IF EXISTS `themes`;
CREATE TABLE IF NOT EXISTS `themes` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `description` varchar(255) DEFAULT NULL,
  `icon` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `themes`
--

INSERT INTO `themes` (`id`, `description`, `icon`, `name`) VALUES
(1, 'Assess your knowledge of different programming languages and their applications.', 'code', 'Programming Languages'),
(2, 'Evaluate your understanding of essential data structures and their practical usage.', 'stack', 'Data Structures'),
(3, 'Test your problem-solving skills with algorithmic challenges and puzzles.', 'function', 'Algorithms'),
(4, 'Assess your familiarity with computer networking concepts and troubleshooting scenarios.', 'global', 'Networking'),
(5, 'Evaluate your grasp of AI principles and their real-world applications.', 'robot', 'Artificial Intelligence'),
(6, 'Test your ability to design and manage databases using SQL and relational database systems.', 'database-2', 'Database Management'),
(7, 'Assess your skills in web development using HTML, CSS, JavaScript, and popular frameworks.', 'html5', 'Web Development'),
(8, 'Evaluate your knowledge of encryption and network security.', 'shield-flash', 'Cybersecurity');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `email` varchar(255) DEFAULT NULL,
  `first_name` varchar(255) DEFAULT NULL,
  `last_name` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `password_reset_token` varchar(255) DEFAULT NULL,
  `authentication_provider` enum('FACEBOOK','GOOGLE','QUIZARD') DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `email`, `first_name`, `last_name`, `password`, `password_reset_token`, `authentication_provider`) VALUES
(1, 'admin@quizard.com', 'John', 'Doe', '$2a$10$PxmlP3KNdK5ZDya5H8LolOr8IKZg4tT9Ub.nb2P6y5tc1QqPlSzgy', NULL, 'QUIZARD'),
(2, 'user@quizard.com', 'Jane', 'Doe', '$2a$10$K/5YiWKqSdvFwouAK7ShqOcQzFGrBlUFiveU57vI0mrRkK1N30uq6', NULL, 'QUIZARD');

-- --------------------------------------------------------

--
-- Table structure for table `users_roles`
--

DROP TABLE IF EXISTS `users_roles`;
CREATE TABLE IF NOT EXISTS `users_roles` (
  `user_id` bigint NOT NULL,
  `role_id` bigint NOT NULL,
  KEY `FKj6m8fwv7oqv74fcehir1a9ffy` (`role_id`),
  KEY `FK2o0jvgh89lemvvo17cbqvdxaa` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `users_roles`
--

INSERT INTO `users_roles` (`user_id`, `role_id`) VALUES
(1, 1),
(2, 2);

--
-- Constraints for dumped tables
--

--
-- Constraints for table `answers`
--
ALTER TABLE `answers`
  ADD CONSTRAINT `FK3erw1a3t0r78st8ty27x6v3g1` FOREIGN KEY (`question_id`) REFERENCES `questions` (`id`);

--
-- Constraints for table `progresses`
--
ALTER TABLE `progresses`
  ADD CONSTRAINT `FK35ar6a1hyt1ggp3kyonrqn7p4` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  ADD CONSTRAINT `FKe0cr4eo0o0rx65hxad6c8nww9` FOREIGN KEY (`test_id`) REFERENCES `tests` (`id`);

--
-- Constraints for table `questions`
--
ALTER TABLE `questions`
  ADD CONSTRAINT `FKoc6xkgj16nhyyes4ath9dyxxw` FOREIGN KEY (`test_id`) REFERENCES `tests` (`id`);

--
-- Constraints for table `results`
--
ALTER TABLE `results`
  ADD CONSTRAINT `FKe9uvk96os1lxpp8pf93p13lmv` FOREIGN KEY (`test_id`) REFERENCES `tests` (`id`),
  ADD CONSTRAINT `FKxtl9ahma532if6r68yvgo7ck` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`);

--
-- Constraints for table `tests`
--
ALTER TABLE `tests`
  ADD CONSTRAINT `FKkv4pwynoh1njfdx64nss9i5h0` FOREIGN KEY (`theme_id`) REFERENCES `themes` (`id`);

--
-- Constraints for table `users_roles`
--
ALTER TABLE `users_roles`
  ADD CONSTRAINT `FK2o0jvgh89lemvvo17cbqvdxaa` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  ADD CONSTRAINT `FKj6m8fwv7oqv74fcehir1a9ffy` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
